{
    "docs": [
        {
            "location": "/user-documentation/intro-to-claw/",
            "text": "Intro to Islandora CLAW\n\n\nIslandora CLAW is the project name for development of Islandora to work with Fedora 4, also known as Islandora 7.x-2.x. To fully understand Islandora CLAW, it is best to start by looking at its contrasts to the previous version of Islandora, known as 7.x-1.x. \n\n\nIslandora 7.x-1.x works as a bridge between Drupal 7.x and Fedora 3. Put simply, Islandora 7.x-1.x is middleware between Fedora 3 and Drupal 7.x, sometimes expressed as a hamburger:\n\n\nIslandora 7.x-1.x (with Fedora 3)\n\n\n\n\nIslandora CLAW (or Islandora 7.x-2.x) does more than simply replace that base layer with Fedora 4. It is a total re-architecting of the interaction between the various pieces. Rather than a hamburger, Islandora CLAW is a chimera:\n\n\nIslandora CLAW (with Fedora 4)\n\n\n\n\nOr, for a diagram that doesn't involve food or animals: \n\n\n\n\nThis new structure has several advantages:\n\n\n\n\nParcelling out the various services and dependencies allows for more horizontal scalability\n\n\nChanging the relationship between Drupal and Fedora allows for a more flexible approach to front-end management (i.e, it need not be Drupal) while also taking much greater advantage of features available from Drupal (i.e, Fedora objects are treated more like nodes, for the purposes of using Drupal contrib modules. Many Islandora 7.x-1.x modules are redundant in Islandora CLAW because they reproduce existing Drupal contrib modules that can be used out of the box in Islandora CLAW).\n\n\nEasier to keep up-to-date as not all pieces must be versioned together.\n\n\nInstallations tools (Ansible, Docker, Vagrant) can automate uniting the pieces in a simple, clean installation process. Islandora has always been a turn-key repository solution, in the sense that it needs no customization once installed. With Islandora CLAW, that installation process is much smoother, with automated solutions that can be used in production.\n\n\n\n\nEcosystem\n\n\nAlpaca\n\n\nEvent driven middleware based on Apache Camel that synchronizes Fedora 4 with Drupal.\n\n\nChullo\n\n\nA PHP client for Fedora 4 built using Guzzle and EasyRdf.\n\n\nCLAW\n\n\nA container with references to all of the other components that make up Islandora CLAW. Also contains documentation and project discussions.\n\n\nCrayfish\n\n\nTop level container for the various Islandora CLAW microservices.\n\n\nIslandora\n\n\nThe Drupal modules associated with CLAW. Work is underway to have this as a project on \ndrupal.org\n.\n\n\nPDX\n\n\nTop level container for the various PCDM specific Islandora CLAW microservices.\n\n\nWhy Switch?\n\n\nIslandora 7.x-1.x is a tried and tested product with a vibrant user and contributor community and many tools and add-ons available to customize and expand its uses. Islandora CLAW is a major departure, representing a great deal of work both in development of the software, and to migrate and upgrade existing Islandora sites. So why make the change?\n\n\nFedora\n\n\nThe primary motive for moving to Islandora CLAW is to stay current with the repository layer of our ecosystem. Moving to Fedora 4 is vital for the long-term utility of the project.\n\n\n\n\nFedora 3 is End-of-Life and has not been supported since 2015. This means that there will be no improvements, bug fixes, or security patches released for the software, drastically increasing individual maintenance needs for adopters. \n\n\nFedora 3 experiences significant slowdown when repositories reach a large (millions) number of objects. Fedora 4 is much more scalable, and is specifically engineered to be horizontally scalable in ways that Fedora 3 cannot.\n\n\n\n\nDrupal\n\n\nDrupal 8\n has been officially released and development has begun on Drupal 9. Official Drupal policy will see Drupal 7 become unsupported when Drupal 9 is released, putting it in the same precarious territory as Fedora 3. \n\n\nThe initial phases of Islandora CLAW development worked with Drupal 7 as a front-end, but Islandora CLAW has been architected with a pivot to Drupal 8 in mind from its very inception. As of June, 2016, Islandora CLAW development has pivoted fully to Drupal 8, ensuring that when the Islandora Community is ready to make the move, there will be a version of Islandora that functions with the latest and best-supported versions of both our front-end and repository layers by pairing Drupal 8 with Fedora 4.\n\n\nCommunity-Driven Design\n\n\nThe Islandora community has grown significantly since the project began, both in terms of users and contributors. For the first time, we are in a position to have a truly community-driven development process, in which any Islandora user can participate at whatever level fits their interests and abilities. Islandora CLAW has worked with the broader Islandora community to solicit use-cases, put forward prospectuses and project plans for review and editing, and has been developed with a mix of funding from Islandora Foundation members and volunteer developers working on sprints.\n\n\nIslandora CLAW is developed \nby\n the Islandora community, \nfor\n the Islandora community. As a member of the Islandora community, you can help to steer the direction it takes.\n\n\nLinked Data\n\n\nLinked Data is a big concept. A \ndefinition by Tim Bernes-Lee\n from 2006 articulates the basic idea in the context of the \"Semantic Web\":   \n\n\n\n\nIt is about making links, so that a person or machine can explore the web of data. With linked data, when you have some of it, you can find other, related, data.\n\n\nLike the web of hypertext, the web of data is constructed with documents on the web. However, unlike the web of hypertext, where links are relationships anchors in hypertext documents written in HTML, for data they links between arbitrary things described by RDF. The URIs identify any kind of object or concept. But for HTML or RDF, the same expectations apply to make the web grow:\n\n\n\n\n\n\nUse URIs as names for things\n\n\n\n\n\n\nUse HTTP URIs so that people can look up those names.\n\n\n\n\n\n\nWhen someone looks up a URI, provide useful information, using the standards (RDF*, SPARQL)\n\n\n\n\n\n\nInclude links to other URIs. so that they can discover more things.\n\n\n\n\n\n\n\n\nLDP is an official W3C recommendation. According to \ntheir spec\n, Linked Data Platform (LDP) defines a set of rules for HTTP operations on web resources, some based on RDF, to provide an architecture for read-write Linked Data on the web. Put more simply: An LDP server is a web server that lets you manage relationships in RDF by creating URLs you can perform CRUD (Create Read Update Delete)\noperation on:\n\n\n\n\nhttp://my_url/some_resource\n\n\nhttp://my_url/some_resource/children\n\n\nhttp://my_url/some_resource/children/child_resource\n\n\n<> prefix:isChildOf <http://my_url/some_resource>\n\n\n\n\nAn LDP server also lets you request the RDF graph for a resource with varying levels of additional information for discovery:\n\n\n\n\nThe resource itself\n\n\nThe resource plus child resources\n\n\nThe resource plus all other resources that reference it (inbound references)\n\n\nThe resource plus children plus inbound references\n\n\n\n\nFedora 4 is an LDP implementation. It stores metadata using RDF (Resource Description Framework), a standard format for data interchange on the web. RDF data is formatted as triples, like so: \n<resource_uri> <predicate_uri> <object_uri>\n and can be exported in many different formats:\n\n\n\n\nJSON-LD\n\n\nRDF/XML\n\n\nTurtle\n\n\nN-Triples\n\n\n\n\nWorking with RDF is not entirely new in the Islandora/Fedora context, as RELS-EXT and RELS-INT have always been RDF/XML. Related objects can be included in RDF, so it functions as a graph you can traverse in order to discover more information. \n\n\nExample: Dublin Core as XML and RDF using the dc namespace\n\n\nDublin Core XML you store with the resource.\n\n\n<?xml version=\"1.0\"?>\n<metadata\n  xmlns=\"http://example.org/myapp/\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://example.org/myapp/ http://example.org/myapp/schema.xsd\"\n  xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n  <dc:title>\n    Islandora\n  </dc:title>\n  <dc:description>\n    Islandora is an open-source software framework designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n  </dc:description>\n</metadata>\n\n\n\n\nvs RDF (which is actually properties of the resource)\n\n\n@prefix dc: <http://purl.org/dc/elements/1.1/> .\n<http://islandora.ca/> dc:title \"Islandora\" ;\n   dc:description \"Islandora is an open-source software framework designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\" .\n\n\n\n\nInteroperability\n\n\nIslandora CLAW works with the \nPortland Common Data Model\n, \"a flexible, extensible domain model that is intended to underlie a wide array of repository and DAMS applications.\" What does this mean in practice? Objects stored in Islandora CLAW will have a data model that can be recognized by Hydra and other custom Fedora 4 based repository heads, and vice versa. By working together with the Hydra and Fedora communities, we can leverage a broader community of developers, librarians, and other digital repository users to build better tools and share resources.",
            "title": "Introduction to Islandora CLAW"
        },
        {
            "location": "/user-documentation/intro-to-claw/#intro-to-islandora-claw",
            "text": "Islandora CLAW is the project name for development of Islandora to work with Fedora 4, also known as Islandora 7.x-2.x. To fully understand Islandora CLAW, it is best to start by looking at its contrasts to the previous version of Islandora, known as 7.x-1.x.   Islandora 7.x-1.x works as a bridge between Drupal 7.x and Fedora 3. Put simply, Islandora 7.x-1.x is middleware between Fedora 3 and Drupal 7.x, sometimes expressed as a hamburger:",
            "title": "Intro to Islandora CLAW"
        },
        {
            "location": "/user-documentation/intro-to-claw/#islandora-7x-1x-with-fedora-3",
            "text": "Islandora CLAW (or Islandora 7.x-2.x) does more than simply replace that base layer with Fedora 4. It is a total re-architecting of the interaction between the various pieces. Rather than a hamburger, Islandora CLAW is a chimera:",
            "title": "Islandora 7.x-1.x (with Fedora 3)"
        },
        {
            "location": "/user-documentation/intro-to-claw/#islandora-claw-with-fedora-4",
            "text": "Or, for a diagram that doesn't involve food or animals:    This new structure has several advantages:   Parcelling out the various services and dependencies allows for more horizontal scalability  Changing the relationship between Drupal and Fedora allows for a more flexible approach to front-end management (i.e, it need not be Drupal) while also taking much greater advantage of features available from Drupal (i.e, Fedora objects are treated more like nodes, for the purposes of using Drupal contrib modules. Many Islandora 7.x-1.x modules are redundant in Islandora CLAW because they reproduce existing Drupal contrib modules that can be used out of the box in Islandora CLAW).  Easier to keep up-to-date as not all pieces must be versioned together.  Installations tools (Ansible, Docker, Vagrant) can automate uniting the pieces in a simple, clean installation process. Islandora has always been a turn-key repository solution, in the sense that it needs no customization once installed. With Islandora CLAW, that installation process is much smoother, with automated solutions that can be used in production.",
            "title": "Islandora CLAW (with Fedora 4)"
        },
        {
            "location": "/user-documentation/intro-to-claw/#ecosystem",
            "text": "",
            "title": "Ecosystem"
        },
        {
            "location": "/user-documentation/intro-to-claw/#alpaca",
            "text": "Event driven middleware based on Apache Camel that synchronizes Fedora 4 with Drupal.",
            "title": "Alpaca"
        },
        {
            "location": "/user-documentation/intro-to-claw/#chullo",
            "text": "A PHP client for Fedora 4 built using Guzzle and EasyRdf.",
            "title": "Chullo"
        },
        {
            "location": "/user-documentation/intro-to-claw/#claw",
            "text": "A container with references to all of the other components that make up Islandora CLAW. Also contains documentation and project discussions.",
            "title": "CLAW"
        },
        {
            "location": "/user-documentation/intro-to-claw/#crayfish",
            "text": "Top level container for the various Islandora CLAW microservices.",
            "title": "Crayfish"
        },
        {
            "location": "/user-documentation/intro-to-claw/#islandora",
            "text": "The Drupal modules associated with CLAW. Work is underway to have this as a project on  drupal.org .",
            "title": "Islandora"
        },
        {
            "location": "/user-documentation/intro-to-claw/#pdx",
            "text": "Top level container for the various PCDM specific Islandora CLAW microservices.",
            "title": "PDX"
        },
        {
            "location": "/user-documentation/intro-to-claw/#why-switch",
            "text": "Islandora 7.x-1.x is a tried and tested product with a vibrant user and contributor community and many tools and add-ons available to customize and expand its uses. Islandora CLAW is a major departure, representing a great deal of work both in development of the software, and to migrate and upgrade existing Islandora sites. So why make the change?",
            "title": "Why Switch?"
        },
        {
            "location": "/user-documentation/intro-to-claw/#fedora",
            "text": "The primary motive for moving to Islandora CLAW is to stay current with the repository layer of our ecosystem. Moving to Fedora 4 is vital for the long-term utility of the project.   Fedora 3 is End-of-Life and has not been supported since 2015. This means that there will be no improvements, bug fixes, or security patches released for the software, drastically increasing individual maintenance needs for adopters.   Fedora 3 experiences significant slowdown when repositories reach a large (millions) number of objects. Fedora 4 is much more scalable, and is specifically engineered to be horizontally scalable in ways that Fedora 3 cannot.",
            "title": "Fedora"
        },
        {
            "location": "/user-documentation/intro-to-claw/#drupal",
            "text": "Drupal 8  has been officially released and development has begun on Drupal 9. Official Drupal policy will see Drupal 7 become unsupported when Drupal 9 is released, putting it in the same precarious territory as Fedora 3.   The initial phases of Islandora CLAW development worked with Drupal 7 as a front-end, but Islandora CLAW has been architected with a pivot to Drupal 8 in mind from its very inception. As of June, 2016, Islandora CLAW development has pivoted fully to Drupal 8, ensuring that when the Islandora Community is ready to make the move, there will be a version of Islandora that functions with the latest and best-supported versions of both our front-end and repository layers by pairing Drupal 8 with Fedora 4.",
            "title": "Drupal"
        },
        {
            "location": "/user-documentation/intro-to-claw/#community-driven-design",
            "text": "The Islandora community has grown significantly since the project began, both in terms of users and contributors. For the first time, we are in a position to have a truly community-driven development process, in which any Islandora user can participate at whatever level fits their interests and abilities. Islandora CLAW has worked with the broader Islandora community to solicit use-cases, put forward prospectuses and project plans for review and editing, and has been developed with a mix of funding from Islandora Foundation members and volunteer developers working on sprints.  Islandora CLAW is developed  by  the Islandora community,  for  the Islandora community. As a member of the Islandora community, you can help to steer the direction it takes.",
            "title": "Community-Driven Design"
        },
        {
            "location": "/user-documentation/intro-to-claw/#linked-data",
            "text": "Linked Data is a big concept. A  definition by Tim Bernes-Lee  from 2006 articulates the basic idea in the context of the \"Semantic Web\":      It is about making links, so that a person or machine can explore the web of data. With linked data, when you have some of it, you can find other, related, data.  Like the web of hypertext, the web of data is constructed with documents on the web. However, unlike the web of hypertext, where links are relationships anchors in hypertext documents written in HTML, for data they links between arbitrary things described by RDF. The URIs identify any kind of object or concept. But for HTML or RDF, the same expectations apply to make the web grow:    Use URIs as names for things    Use HTTP URIs so that people can look up those names.    When someone looks up a URI, provide useful information, using the standards (RDF*, SPARQL)    Include links to other URIs. so that they can discover more things.     LDP is an official W3C recommendation. According to  their spec , Linked Data Platform (LDP) defines a set of rules for HTTP operations on web resources, some based on RDF, to provide an architecture for read-write Linked Data on the web. Put more simply: An LDP server is a web server that lets you manage relationships in RDF by creating URLs you can perform CRUD (Create Read Update Delete)\noperation on:   http://my_url/some_resource  http://my_url/some_resource/children  http://my_url/some_resource/children/child_resource  <> prefix:isChildOf <http://my_url/some_resource>   An LDP server also lets you request the RDF graph for a resource with varying levels of additional information for discovery:   The resource itself  The resource plus child resources  The resource plus all other resources that reference it (inbound references)  The resource plus children plus inbound references   Fedora 4 is an LDP implementation. It stores metadata using RDF (Resource Description Framework), a standard format for data interchange on the web. RDF data is formatted as triples, like so:  <resource_uri> <predicate_uri> <object_uri>  and can be exported in many different formats:   JSON-LD  RDF/XML  Turtle  N-Triples   Working with RDF is not entirely new in the Islandora/Fedora context, as RELS-EXT and RELS-INT have always been RDF/XML. Related objects can be included in RDF, so it functions as a graph you can traverse in order to discover more information.",
            "title": "Linked Data"
        },
        {
            "location": "/user-documentation/intro-to-claw/#example-dublin-core-as-xml-and-rdf-using-the-dc-namespace",
            "text": "Dublin Core XML you store with the resource.  <?xml version=\"1.0\"?>\n<metadata\n  xmlns=\"http://example.org/myapp/\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://example.org/myapp/ http://example.org/myapp/schema.xsd\"\n  xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n  <dc:title>\n    Islandora\n  </dc:title>\n  <dc:description>\n    Islandora is an open-source software framework designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n  </dc:description>\n</metadata>  vs RDF (which is actually properties of the resource)  @prefix dc: <http://purl.org/dc/elements/1.1/> .\n<http://islandora.ca/> dc:title \"Islandora\" ;\n   dc:description \"Islandora is an open-source software framework designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\" .",
            "title": "Example: Dublin Core as XML and RDF using the dc namespace"
        },
        {
            "location": "/user-documentation/intro-to-claw/#interoperability",
            "text": "Islandora CLAW works with the  Portland Common Data Model , \"a flexible, extensible domain model that is intended to underlie a wide array of repository and DAMS applications.\" What does this mean in practice? Objects stored in Islandora CLAW will have a data model that can be recognized by Hydra and other custom Fedora 4 based repository heads, and vice versa. By working together with the Hydra and Fedora communities, we can leverage a broader community of developers, librarians, and other digital repository users to build better tools and share resources.",
            "title": "Interoperability"
        },
        {
            "location": "/user-documentation/2xfor1x/",
            "text": "What's Different Between Islandora 1.x and Islandora CLAW\n\n\nIn the most basic terms, Islandora CLAW is the version of Islandora that works with \nFedora 4\n. Because Fedora 4 is a vastly different platform than Fedora 3, so too is Islandora CLAW a major departure from what came before. Switching to CLAW represents not just a typical upgrade with improvements, features, and bug fixes, but rather a major shift in how objects are stored and managed. \n\n\nMoving from Islandora 7.x-1.x to CLAW requires a migration of objects, which you can learn about \nhere\n. It also requires some adjustments in how you think about your objects and their relationships, and how to manage them in Islandora, which we will cover below.\n\n\nYou can also check out some of the documentation provided by the Fedora project:\n\n \nConcept Mapping - Fedora 3 to 4\n\n\n \nThe Fedora 4 object model\n\n\n \nFedora 3 to 4 Upgration\n\n\n \nLDP-PCDM-F4 In Action\n\n\nFedora\n\n\nRepository Structure\n\n\nFedora 3 stored all objects at the top level of the repository, although presentation of the objects could mimic a directory structure by having objects 'in' collections and collections 'in' other collections. This image is a helpful oversimplification:\n\n\n\n\nFedora 4 differs considerably in that there is an innate tree hierarchy to the repository rather than a flat structure. Put less simply, \"a Fedora 4 repository consists of a directed acyclic graph of resources where edges represent a parent-child relation\" (\nFedora 4\n).\n\n\nObject Structure\n\n\nFedora 3 objects are FOXML (Fedora Object eXtensible Markup Language) documents, with three elements:\n\n\n\n\nDigital Object Identifier\n: A unique, persistent identifier for the digital object. Also knowns as the PID.\n\n\nSystem Properties\n: A set of system-defined descriptive properties that is necessary to manage and track the object in the repository.\n\n\nDatastream(s)\n: The element in a Fedora digital object that represents a content item.\n\n\n\n\nIn Fedora 4 , what we would have called \nobjects\n are now referred to as \nresources\n and are not composed of XML; instead, they are stored in ModeShape as nodes with RDF properties. They can contain the following elements:\n\n\n\n\nResource\n: Roughly equivalent to a Fedora 3 object - a conceptual representation of a thing that can contain files or other containers.\n\n\nNon-RDF Source\n: Roughly equivalent to a datastream. A Non-RDF Source (or binary) is simply a bitstream (e.g. JPG, PDF, XML, MP3, etc.).\n\n\n\n\nDatastreams\n\n\nIn Islandora CLAW, RDF datastreams (RELS-EXT and RELS-INT) are stored as RDF in Fedora. Binary datastreams (files, images) are files or \nnonRdfResources\n (see \nPCDM\n). Descriptive metadata datastreams (MODS, DC, DwC, PBCore, etc) are will be stored as RDF.\n\n\nPIDs\n\n\nEvery object in a Fedora 3 repository had a Persistent Identifier following the pattern \nnamespace:pid\n. Fedora 4 resources do not have PIDs. Instead, since Fedora 4 is an LDP server, their identifiers are fundamentally their URIs. The PIDs of objects migrated from a Fedora 3 repository can still be stored in Fedora 4, as additional properties on the new Fedora 4 resource.\n\n\nSince resources are stored as \nnodes\n on the Drupal side of Islandora CLAW, they also have Drupal UUIDs.",
            "title": "Islandora CLAW for 1.x Users"
        },
        {
            "location": "/user-documentation/2xfor1x/#whats-different-between-islandora-1x-and-islandora-claw",
            "text": "In the most basic terms, Islandora CLAW is the version of Islandora that works with  Fedora 4 . Because Fedora 4 is a vastly different platform than Fedora 3, so too is Islandora CLAW a major departure from what came before. Switching to CLAW represents not just a typical upgrade with improvements, features, and bug fixes, but rather a major shift in how objects are stored and managed.   Moving from Islandora 7.x-1.x to CLAW requires a migration of objects, which you can learn about  here . It also requires some adjustments in how you think about your objects and their relationships, and how to manage them in Islandora, which we will cover below.  You can also check out some of the documentation provided by the Fedora project:   Concept Mapping - Fedora 3 to 4    The Fedora 4 object model    Fedora 3 to 4 Upgration    LDP-PCDM-F4 In Action",
            "title": "What's Different Between Islandora 1.x and Islandora CLAW"
        },
        {
            "location": "/user-documentation/2xfor1x/#fedora",
            "text": "",
            "title": "Fedora"
        },
        {
            "location": "/user-documentation/2xfor1x/#repository-structure",
            "text": "Fedora 3 stored all objects at the top level of the repository, although presentation of the objects could mimic a directory structure by having objects 'in' collections and collections 'in' other collections. This image is a helpful oversimplification:   Fedora 4 differs considerably in that there is an innate tree hierarchy to the repository rather than a flat structure. Put less simply, \"a Fedora 4 repository consists of a directed acyclic graph of resources where edges represent a parent-child relation\" ( Fedora 4 ).",
            "title": "Repository Structure"
        },
        {
            "location": "/user-documentation/2xfor1x/#object-structure",
            "text": "Fedora 3 objects are FOXML (Fedora Object eXtensible Markup Language) documents, with three elements:   Digital Object Identifier : A unique, persistent identifier for the digital object. Also knowns as the PID.  System Properties : A set of system-defined descriptive properties that is necessary to manage and track the object in the repository.  Datastream(s) : The element in a Fedora digital object that represents a content item.   In Fedora 4 , what we would have called  objects  are now referred to as  resources  and are not composed of XML; instead, they are stored in ModeShape as nodes with RDF properties. They can contain the following elements:   Resource : Roughly equivalent to a Fedora 3 object - a conceptual representation of a thing that can contain files or other containers.  Non-RDF Source : Roughly equivalent to a datastream. A Non-RDF Source (or binary) is simply a bitstream (e.g. JPG, PDF, XML, MP3, etc.).",
            "title": "Object Structure"
        },
        {
            "location": "/user-documentation/2xfor1x/#datastreams",
            "text": "In Islandora CLAW, RDF datastreams (RELS-EXT and RELS-INT) are stored as RDF in Fedora. Binary datastreams (files, images) are files or  nonRdfResources  (see  PCDM ). Descriptive metadata datastreams (MODS, DC, DwC, PBCore, etc) are will be stored as RDF.",
            "title": "Datastreams"
        },
        {
            "location": "/user-documentation/2xfor1x/#pids",
            "text": "Every object in a Fedora 3 repository had a Persistent Identifier following the pattern  namespace:pid . Fedora 4 resources do not have PIDs. Instead, since Fedora 4 is an LDP server, their identifiers are fundamentally their URIs. The PIDs of objects migrated from a Fedora 3 repository can still be stored in Fedora 4, as additional properties on the new Fedora 4 resource.  Since resources are stored as  nodes  on the Drupal side of Islandora CLAW, they also have Drupal UUIDs.",
            "title": "PIDs"
        },
        {
            "location": "/mvp/mvp_doc/",
            "text": "Islandora CLAW MVP\n\n\nMotivation\n\n\nThe Islandora CLAW project is currently transitioning from a prototype into a competitive product, and has had a requirements change from integration with Drupal 7 to Drupal 8. In order to aid in that transition, we are defining the minimum viable product. This will defend against scope creep, give clearly defined goals for community members to work towards, and present the point at which the CLAW team feels the software is ready to be tested out in small installations.\n\n\nNeedless to say, since this is a minimum product, a lot of parts of the previous prototype are either going to get replaced by an existing project to ease the maintenance load, or be removed altogether until time and resources allow other development.\n\n\nHigh Level Features\n\n\nThese are what are considered the minimum requirements for a functional Islandora CLAW that is worthy of a 1.0.0 release.\n\n\n\n\nContent modeled in Drupal as Entities using \nPCDM\n 1.0\n\n\nREST\n API exposed for Drupal Entities\n\n\nSupport for collections, images, books, and pages\n\n\nThe ability to control metadata mappings between Drupal and \nRDF\n\n\nProvide RDF based default descriptive metadata profile in Drupal\n\n\nThe ability to export/import \nJSON-LD\n\n\nAutomatic backup of Drupal content in Fedora 4\n\n\nAbility to restore/bootstrap a Drupal site from a properly structured Fedora 4 repository\n\n\nThe ability to index and search resources with Apache Solr\n\n\nThe ability to restrict access to collections and/or individual resources across all representations (Drupal, Fedora, Solr, etc\u2026)\n\n\nAsynchronous derivative generation\n\n\nVagrant\n environment for development purposes, which will serve as a starting point for more complicated, distributed installs\n\n\n\n\nArchitecture\n\n\nOverview\n\n\nIslandora is composed of four broad categories of technologies. On one end, there is the administrative interface, which users and other clients will interact with. On the other is a repository, which will hold binary data and RDF triples. In between the two are connectors, which are small pieces of software that react to events from either administrative interface or the repository. These connectors will utilize microservices -- small utilities exposed as web services either internally or out on the internet at large.\n\n\n\n\nAdministrative Interface\n\n\nDrupal 8\n\n\nDrupal 8\n provides a content management system (CMS for short) that allows end users the ability to create, edit, publish, and present digital content. Clients will interact with Drupal 8 via a browser or through a http client (such as \ncURL\n) in order to manipulate digital content. With each write operation, messages will be emitted to an event stream for processing by connectors.\n\n\nSQL DB\n\n\nDrupal 8 requires a \nMySQL\n (or drop-in replacement) or \nPostgres\n database.\n\n\nSearch Engine\n\n\nExisting Drupal 8 modules for \nApache Solr\n or \nElastic Search\n will be utilized to provide full text search.\n\n\nMicroservices\n\n\nA microservice is a small web service with functionality related to a single problem, even if it exposes just a single function. It can be deployed and configured independently of any other service, even having its own database if necessary. It can even be something that we don\u2019t directly maintain or control ourselves.\n\n\nID Mapping Service\n\n\nIdentifiers between Fedora and Drupal need to be aligned so we can trace our way from one end of the system to the other.  Implementing it as a microservice decouples this functionality from the rest of the codebase, allowing it to change or be pluggable with different mapping functions. It will utilize its own database. The ID indexing connector will be its primary client, updating the registry of IDs in response to repository events.\n\n\nImage Conversion Service\n\n\nImage conversion is a common operation in a content repository. Thumbnails, lower resolution copies for everyday access, and JP2s for use with IIIF image servers need to be generated when preservation masters are added or updated. This can be easily implemented by exposing ImageMagick\u2019s convert command as a microservice.\n\n\nText Extraction Service\n\n\nText extraction on PDFs or images of written text can be utilized to provide searching capabilities on content of a book or document.   Ghostscript can be used on text based PDF\u2019s. Images will require an OCR utility like \nTesseract\n.\n\n\nFITS Web Service\n\n\nThe \nFITS web service\n is an already existing project that extracts technical metadata and produces FITS xml files.\n\n\nRepository\n\n\nFedora\n\n\nFedora 4\n houses binary content along with RDF triples for metadata about repository content. It also conforms to the \nLDP\n specification, allowing for manipulation of relationships through HTTP operations.\n\n\nAPI-X\n\n\nAPI-X\n allows Islandora to extend the Fedora 4 API.  Microservices are registered in API-X and then \u2018bound\u2019 to repository content. A proxy sitting in front of Fedora exposes microservices as functions on repository content, which all HTTP requests must be routed through.  \n\n\nFor example, suppose Islandora is running the FITS web service described above.  Then let\u2019s say we \u2018bind\u2019 it to all binaries in Fedora, with an identifier of \u2018fits\u2019. If we have a binary file at \nhttp://fedora-host.com/fcrepo/rest/binaries/example\n, then instead of writing code to retreive the content and forward it to our FITS service, we simply visit the proxy at \nhttp://apix-host.com/fcrepo/rest/binaries/example/fits\n. \n\n\nSince services can be described, and that information is made available to interested clients, other applications can make informed decisions about what services are available for particular resources.\n\n\nTriplestore\n\n\nRDF content is indexed in a \nSPARQL\n 1.1 compliant triplestore.\n\n\nConnectors\n\n\nConnectors are small programs that listen to the event streams of either the Fedora repository or Drupal. In response to events, they perform actions, often bridging two pieces of technology together (like indexing a triplestore, hence \u2018connectors\u2019). \nApache Camel\n is a natural fit for these types of programs.\n\n\nConnectors will often delegate larger chunks of work to microservices, either bound to content through API-X or used stand-alone. They are primarily concerned with guaranteeing that events are responded to in a \nidempotent\n fashion.  Due to the nature of asynchronous messaging, certain guarantees, such as timeliness of delivery, cannot be made.  So connectors may need to retry a couple of times, or know to ignore a message that\u2019s delivered late or applied twice.  This is why it\u2019s important that operations are idempotent.\n\n\nID Indexer\n\n\nA connector will listen to Fedora events and index unique IDs contained in RDF using the ID Mapping microservice. The predicate used to notate unique IDs can be controlled through configuration. \n\n\nTriplestore Indexer\n\n\nA connector will listen to Fedora events and index RDF in a SPARQL 1.1 triplestore. This is provided by the Fedora community as part of the \nfcrepo-camel-toolbox\n project.\n\n\nSync\n\n\nA sub-project of \nAlpaca\n that provides two connectors for keeping information between Fedora and Drupal in sync. One, which indexes content in Fedora from Drupal events, is always running. The other, which indexes content in Drupal based on state in Fedora, is manually triggered through a re-indexing process like other fcrepo-camel-toolbox connectors.\n\n\nAlpaca\n\n\nAlpaca\n responds to creation and update events for binary files and creates derivative files based on the microservices it finds available for that type of binary in API-X. Derivatives are then ingested into Drupal, with Sync making sure they get flushed back to Fedora.\n\n\nRequest Flows\n\n\nHere are the proposed flows for all the different types of requests you can make against repository objects.\n\n\nRead a Resource\n\n\nSuppose a client views a resource in Islandora through their browser. A request is made to Drupal, which looks up the resource in an SQL database, and its representation is returned to the user.\n\n\n\n\nCreate a Resource\n\n\nSuppose a client submits a form to create a new Resource, or provides a json-ld or binary representation to an entity REST endpoint. The supplied representation is used to create an entity in Drupal. In response to the entity being saved, an event is emitted with supplied representation as the body. The response is then sent back to the client. If using a browser, the client should be redirected to the newly created resource.  \n\n\n\n\nMeanwhile, Sync will receive the creation event, and ingest the supplied representation in Fedora. Fedora will then emit a creation event.  \n\n\n\n\nThe ID Mapping connector will react, retrieving the Fedora representation and extracting an ID out of the RDF. That ID will be indexed in the ID Mapping microservice.\n\n\n\n\nThe triple store connector will also react, retrieving RDF and indexing it in the triple store.\n\n\n\n\nIf the node created was a preservation master, then Alpaca will respond by inspecting the list of derivative generation services bound as extensions on the preservation master in API-X. Each will be invoked, with the new resource getting ingested into Drupal.  \n\n\n\n\nThe process repeats itself again, with new events being emitted for the new entities getting created in Drupal. Sync responds and ingests the derivatives into Fedora.\n\n\n\n\nFedora emits the creation events, but since none are a preservation master, Alpaca does not respond and the cycle is broken.\n\n\n\n\nUpdate a Resource\n\n\nSuppose a client submits a form to update a new Resource, or provides a json-ld or binary representation to an entity REST endpoint.  In response to the entity being saved, an event is emitted with supplied representation as the body. The response is then sent back to the client.\n\n\n\n\nMeanwhile, Sync will receive the update event, and apply it against the representation in Fedora. Fedora will then emit an update event.  \n\n\n\n\nThe triple store connector will also react, retrieving RDF and indexing it in the triple store.\n\n\n\n\nIf a binary of a presentation master was updated, then Alpaca will respond by inspecting the list of derivative generation services bound as extensions on the preservation master in API-X. Each will be invoked, with the new resource overwriting its predecessor in Drupal.\n\n\n\n\nThe process repeats itself again, with new events being emitted for the derivative entities getting updated in Drupal. Sync responds and ingests the derivatives into Fedora.\n\n\n\n\nFedora emits the creation events, but since none are a preservation master, Alpaca does not respond and the cycle is broken.\n\n\n\n\nDelete a Resource\n\n\nSuppose a client deletes a resource through the browser or API. In response to the entity being deleted, an event is emitted. The response is then sent back to the client.\n\n\n\n\nMeanwhile, Sync will receive the delete event, and remove the corresponding resource in Fedora.\n\n\n\n\nThe ID Mapping connector will respond to the delete event by removing the resource\u2019s entry.\n\n\n\n\nThe triple store connector will also respond, deleting all triples with subject of the resource.\n\n\n\n\nContent Modeling in Fedora\n\n\nDescriptive metadata will be RDF properties, and a default dcterms descriptive metadata application profile will be created.\n\n\nTechnical metadata will be RDF properties, and follow the Hydra/Islandora led \ntechnical metadata application profile\n.\n\n\nHere are Turtle snippets representing the default collection, object, and file types.\n\n\nCollection\n\n\n<>  a pcdm:Collection   .\ndc:title \u201cCollection Title\u201d .\n    dc:description \u201cCollection description\u201d .\n    \u2026 other descriptive metadata \u2026\n\n\n\n\nImage\n\n\n<>  a pcdm:Object, schema:ImageObject .\n    pcdm:memberOf <someCollection>\n    dc:title \u201cImage Title\u201d .\n    dc:description \u201cImage description\u201d .\n    \u2026 other descriptive metadata \u2026\n\n\n\n\nImage Preservation Master File\n\n\n<>  a pcdmuse:PreservationMasterFile .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nImage Service File\n\n\n<>  a pcdmuse:ServiceFile .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nImage Thumbnail File\n\n\n<>  a pcdmuse:ThumbnailImage .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/png\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nBook\n\n\n<>  a pcdm:Object, schema:Book .\n    pcdm:memberOf <someCollection>\niana:first <firstPageProxy>\niana:last <lastPageProxy>\n    dc:title \u201cBook Title\u201d .\n    dc:description \u201cBook description\u201d .\n    \u2026 other descriptive metadata \u2026\n\n\n\n\nPage\n\n\n<>  a pcdm:Object, schema:ImageObject .\n    pcdm:memberOf <someBook>\n    dc:title \u201cPage Title\u201d .\n    dc:description \u201cPage description\u201d .\n    \u2026 other descriptive metadata \u2026\n\n\n\n\nPage Proxy\n\n\n<>  a ore:Proxy\n    ore:proxyFor <somePage>\n    ore:proxyIn <someBook>\n    iana:prev <prevPageProxy>\n    iana:next <nextPageProxy>\n\n\n\n\nPage Preservation Master File\n\n\n<>  a pcdmuse:PreservationMasterFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/tiff\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nPage Intermediate File\n\n\n<>  a pcdmuse:IntermediateFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/jp2\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nPage Service File\n\n\n<>  a pcdmuse:ServiceFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nPage Thumbnail File\n\n\n<>  a pcdmuse:ThumbnailImage .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/png\u201d\n    \u2026 other technical metadata \u2026\n\n\n\n\nDrupal 8\n\n\nObjects will be modeled using \ncontent entities\n in Drupal 8. The content entities store their metadata as Drupal fields, which are mapped to RDF using an \nrdf mapping\n. An RDF mapping not only allows metadata to be transformed into json-ld, but it also controls which properties from Drupal get preserved in Fedora.\n\n\nFiles will be modeled using \nmedia entities\n. Media entities attempt to provide the base storage component for the Drupal 8. They can model any type of media, including local files, YouTube\nvideos, Tweets, Instagram photos, etc\u2026\n\n\nIngests and edits can be done for an entire graph of entities using \ninline entity forms\n. Although flushing back to Fedora happens at the per-Resource level, using inline entity forms makes the \nnamed graph\n the default unit of work for a repository architect.\n\n\nHere\u2019s an example of what an ingest form could look like using inline entity forms:\n\n\n\n\nHere\u2019s a list of the entities required to meet our goals. Each of these entities must have basic RESTful CRUD operations exposed for clients.\n\n\n\n\nRdfResource\n\n\nNonRdfResource\n\n\nProxy\n\n\nObject\n\n\nFile\n\n\nCollection\n\n\nImage\n\n\nPage\n\n\nBook\n\n\n\n\nIndividual entities and named graphs can be imported and exported in \njson-ld format\n using \njson-ld contexts\n.",
            "title": "Minimum Viable Product"
        },
        {
            "location": "/mvp/mvp_doc/#islandora-claw-mvp",
            "text": "",
            "title": "Islandora CLAW MVP"
        },
        {
            "location": "/mvp/mvp_doc/#motivation",
            "text": "The Islandora CLAW project is currently transitioning from a prototype into a competitive product, and has had a requirements change from integration with Drupal 7 to Drupal 8. In order to aid in that transition, we are defining the minimum viable product. This will defend against scope creep, give clearly defined goals for community members to work towards, and present the point at which the CLAW team feels the software is ready to be tested out in small installations.  Needless to say, since this is a minimum product, a lot of parts of the previous prototype are either going to get replaced by an existing project to ease the maintenance load, or be removed altogether until time and resources allow other development.",
            "title": "Motivation"
        },
        {
            "location": "/mvp/mvp_doc/#high-level-features",
            "text": "These are what are considered the minimum requirements for a functional Islandora CLAW that is worthy of a 1.0.0 release.   Content modeled in Drupal as Entities using  PCDM  1.0  REST  API exposed for Drupal Entities  Support for collections, images, books, and pages  The ability to control metadata mappings between Drupal and  RDF  Provide RDF based default descriptive metadata profile in Drupal  The ability to export/import  JSON-LD  Automatic backup of Drupal content in Fedora 4  Ability to restore/bootstrap a Drupal site from a properly structured Fedora 4 repository  The ability to index and search resources with Apache Solr  The ability to restrict access to collections and/or individual resources across all representations (Drupal, Fedora, Solr, etc\u2026)  Asynchronous derivative generation  Vagrant  environment for development purposes, which will serve as a starting point for more complicated, distributed installs",
            "title": "High Level Features"
        },
        {
            "location": "/mvp/mvp_doc/#architecture",
            "text": "",
            "title": "Architecture"
        },
        {
            "location": "/mvp/mvp_doc/#overview",
            "text": "Islandora is composed of four broad categories of technologies. On one end, there is the administrative interface, which users and other clients will interact with. On the other is a repository, which will hold binary data and RDF triples. In between the two are connectors, which are small pieces of software that react to events from either administrative interface or the repository. These connectors will utilize microservices -- small utilities exposed as web services either internally or out on the internet at large.",
            "title": "Overview"
        },
        {
            "location": "/mvp/mvp_doc/#administrative-interface",
            "text": "",
            "title": "Administrative Interface"
        },
        {
            "location": "/mvp/mvp_doc/#drupal-8",
            "text": "Drupal 8  provides a content management system (CMS for short) that allows end users the ability to create, edit, publish, and present digital content. Clients will interact with Drupal 8 via a browser or through a http client (such as  cURL ) in order to manipulate digital content. With each write operation, messages will be emitted to an event stream for processing by connectors.",
            "title": "Drupal 8"
        },
        {
            "location": "/mvp/mvp_doc/#sql-db",
            "text": "Drupal 8 requires a  MySQL  (or drop-in replacement) or  Postgres  database.",
            "title": "SQL DB"
        },
        {
            "location": "/mvp/mvp_doc/#search-engine",
            "text": "Existing Drupal 8 modules for  Apache Solr  or  Elastic Search  will be utilized to provide full text search.",
            "title": "Search Engine"
        },
        {
            "location": "/mvp/mvp_doc/#microservices",
            "text": "A microservice is a small web service with functionality related to a single problem, even if it exposes just a single function. It can be deployed and configured independently of any other service, even having its own database if necessary. It can even be something that we don\u2019t directly maintain or control ourselves.",
            "title": "Microservices"
        },
        {
            "location": "/mvp/mvp_doc/#id-mapping-service",
            "text": "Identifiers between Fedora and Drupal need to be aligned so we can trace our way from one end of the system to the other.  Implementing it as a microservice decouples this functionality from the rest of the codebase, allowing it to change or be pluggable with different mapping functions. It will utilize its own database. The ID indexing connector will be its primary client, updating the registry of IDs in response to repository events.",
            "title": "ID Mapping Service"
        },
        {
            "location": "/mvp/mvp_doc/#image-conversion-service",
            "text": "Image conversion is a common operation in a content repository. Thumbnails, lower resolution copies for everyday access, and JP2s for use with IIIF image servers need to be generated when preservation masters are added or updated. This can be easily implemented by exposing ImageMagick\u2019s convert command as a microservice.",
            "title": "Image Conversion Service"
        },
        {
            "location": "/mvp/mvp_doc/#text-extraction-service",
            "text": "Text extraction on PDFs or images of written text can be utilized to provide searching capabilities on content of a book or document.   Ghostscript can be used on text based PDF\u2019s. Images will require an OCR utility like  Tesseract .",
            "title": "Text Extraction Service"
        },
        {
            "location": "/mvp/mvp_doc/#fits-web-service",
            "text": "The  FITS web service  is an already existing project that extracts technical metadata and produces FITS xml files.",
            "title": "FITS Web Service"
        },
        {
            "location": "/mvp/mvp_doc/#repository",
            "text": "",
            "title": "Repository"
        },
        {
            "location": "/mvp/mvp_doc/#fedora",
            "text": "Fedora 4  houses binary content along with RDF triples for metadata about repository content. It also conforms to the  LDP  specification, allowing for manipulation of relationships through HTTP operations.",
            "title": "Fedora"
        },
        {
            "location": "/mvp/mvp_doc/#api-x",
            "text": "API-X  allows Islandora to extend the Fedora 4 API.  Microservices are registered in API-X and then \u2018bound\u2019 to repository content. A proxy sitting in front of Fedora exposes microservices as functions on repository content, which all HTTP requests must be routed through.    For example, suppose Islandora is running the FITS web service described above.  Then let\u2019s say we \u2018bind\u2019 it to all binaries in Fedora, with an identifier of \u2018fits\u2019. If we have a binary file at  http://fedora-host.com/fcrepo/rest/binaries/example , then instead of writing code to retreive the content and forward it to our FITS service, we simply visit the proxy at  http://apix-host.com/fcrepo/rest/binaries/example/fits .   Since services can be described, and that information is made available to interested clients, other applications can make informed decisions about what services are available for particular resources.",
            "title": "API-X"
        },
        {
            "location": "/mvp/mvp_doc/#triplestore",
            "text": "RDF content is indexed in a  SPARQL  1.1 compliant triplestore.",
            "title": "Triplestore"
        },
        {
            "location": "/mvp/mvp_doc/#connectors",
            "text": "Connectors are small programs that listen to the event streams of either the Fedora repository or Drupal. In response to events, they perform actions, often bridging two pieces of technology together (like indexing a triplestore, hence \u2018connectors\u2019).  Apache Camel  is a natural fit for these types of programs.  Connectors will often delegate larger chunks of work to microservices, either bound to content through API-X or used stand-alone. They are primarily concerned with guaranteeing that events are responded to in a  idempotent  fashion.  Due to the nature of asynchronous messaging, certain guarantees, such as timeliness of delivery, cannot be made.  So connectors may need to retry a couple of times, or know to ignore a message that\u2019s delivered late or applied twice.  This is why it\u2019s important that operations are idempotent.",
            "title": "Connectors"
        },
        {
            "location": "/mvp/mvp_doc/#id-indexer",
            "text": "A connector will listen to Fedora events and index unique IDs contained in RDF using the ID Mapping microservice. The predicate used to notate unique IDs can be controlled through configuration.",
            "title": "ID Indexer"
        },
        {
            "location": "/mvp/mvp_doc/#triplestore-indexer",
            "text": "A connector will listen to Fedora events and index RDF in a SPARQL 1.1 triplestore. This is provided by the Fedora community as part of the  fcrepo-camel-toolbox  project.",
            "title": "Triplestore Indexer"
        },
        {
            "location": "/mvp/mvp_doc/#sync",
            "text": "A sub-project of  Alpaca  that provides two connectors for keeping information between Fedora and Drupal in sync. One, which indexes content in Fedora from Drupal events, is always running. The other, which indexes content in Drupal based on state in Fedora, is manually triggered through a re-indexing process like other fcrepo-camel-toolbox connectors.",
            "title": "Sync"
        },
        {
            "location": "/mvp/mvp_doc/#alpaca",
            "text": "Alpaca  responds to creation and update events for binary files and creates derivative files based on the microservices it finds available for that type of binary in API-X. Derivatives are then ingested into Drupal, with Sync making sure they get flushed back to Fedora.",
            "title": "Alpaca"
        },
        {
            "location": "/mvp/mvp_doc/#request-flows",
            "text": "Here are the proposed flows for all the different types of requests you can make against repository objects.",
            "title": "Request Flows"
        },
        {
            "location": "/mvp/mvp_doc/#read-a-resource",
            "text": "Suppose a client views a resource in Islandora through their browser. A request is made to Drupal, which looks up the resource in an SQL database, and its representation is returned to the user.",
            "title": "Read a Resource"
        },
        {
            "location": "/mvp/mvp_doc/#create-a-resource",
            "text": "Suppose a client submits a form to create a new Resource, or provides a json-ld or binary representation to an entity REST endpoint. The supplied representation is used to create an entity in Drupal. In response to the entity being saved, an event is emitted with supplied representation as the body. The response is then sent back to the client. If using a browser, the client should be redirected to the newly created resource.     Meanwhile, Sync will receive the creation event, and ingest the supplied representation in Fedora. Fedora will then emit a creation event.     The ID Mapping connector will react, retrieving the Fedora representation and extracting an ID out of the RDF. That ID will be indexed in the ID Mapping microservice.   The triple store connector will also react, retrieving RDF and indexing it in the triple store.   If the node created was a preservation master, then Alpaca will respond by inspecting the list of derivative generation services bound as extensions on the preservation master in API-X. Each will be invoked, with the new resource getting ingested into Drupal.     The process repeats itself again, with new events being emitted for the new entities getting created in Drupal. Sync responds and ingests the derivatives into Fedora.   Fedora emits the creation events, but since none are a preservation master, Alpaca does not respond and the cycle is broken.",
            "title": "Create a Resource"
        },
        {
            "location": "/mvp/mvp_doc/#update-a-resource",
            "text": "Suppose a client submits a form to update a new Resource, or provides a json-ld or binary representation to an entity REST endpoint.  In response to the entity being saved, an event is emitted with supplied representation as the body. The response is then sent back to the client.   Meanwhile, Sync will receive the update event, and apply it against the representation in Fedora. Fedora will then emit an update event.     The triple store connector will also react, retrieving RDF and indexing it in the triple store.   If a binary of a presentation master was updated, then Alpaca will respond by inspecting the list of derivative generation services bound as extensions on the preservation master in API-X. Each will be invoked, with the new resource overwriting its predecessor in Drupal.   The process repeats itself again, with new events being emitted for the derivative entities getting updated in Drupal. Sync responds and ingests the derivatives into Fedora.   Fedora emits the creation events, but since none are a preservation master, Alpaca does not respond and the cycle is broken.",
            "title": "Update a Resource"
        },
        {
            "location": "/mvp/mvp_doc/#delete-a-resource",
            "text": "Suppose a client deletes a resource through the browser or API. In response to the entity being deleted, an event is emitted. The response is then sent back to the client.   Meanwhile, Sync will receive the delete event, and remove the corresponding resource in Fedora.   The ID Mapping connector will respond to the delete event by removing the resource\u2019s entry.   The triple store connector will also respond, deleting all triples with subject of the resource.",
            "title": "Delete a Resource"
        },
        {
            "location": "/mvp/mvp_doc/#content-modeling-in-fedora",
            "text": "Descriptive metadata will be RDF properties, and a default dcterms descriptive metadata application profile will be created.  Technical metadata will be RDF properties, and follow the Hydra/Islandora led  technical metadata application profile .  Here are Turtle snippets representing the default collection, object, and file types.",
            "title": "Content Modeling in Fedora"
        },
        {
            "location": "/mvp/mvp_doc/#collection",
            "text": "<>  a pcdm:Collection   .\ndc:title \u201cCollection Title\u201d .\n    dc:description \u201cCollection description\u201d .\n    \u2026 other descriptive metadata \u2026",
            "title": "Collection"
        },
        {
            "location": "/mvp/mvp_doc/#image",
            "text": "<>  a pcdm:Object, schema:ImageObject .\n    pcdm:memberOf <someCollection>\n    dc:title \u201cImage Title\u201d .\n    dc:description \u201cImage description\u201d .\n    \u2026 other descriptive metadata \u2026",
            "title": "Image"
        },
        {
            "location": "/mvp/mvp_doc/#image-preservation-master-file",
            "text": "<>  a pcdmuse:PreservationMasterFile .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Image Preservation Master File"
        },
        {
            "location": "/mvp/mvp_doc/#image-service-file",
            "text": "<>  a pcdmuse:ServiceFile .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Image Service File"
        },
        {
            "location": "/mvp/mvp_doc/#image-thumbnail-file",
            "text": "<>  a pcdmuse:ThumbnailImage .\n    pcdm:fileOf <someImage>\n    ebucore:hasMimeType \u201cimage/png\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Image Thumbnail File"
        },
        {
            "location": "/mvp/mvp_doc/#book",
            "text": "<>  a pcdm:Object, schema:Book .\n    pcdm:memberOf <someCollection>\niana:first <firstPageProxy>\niana:last <lastPageProxy>\n    dc:title \u201cBook Title\u201d .\n    dc:description \u201cBook description\u201d .\n    \u2026 other descriptive metadata \u2026",
            "title": "Book"
        },
        {
            "location": "/mvp/mvp_doc/#page",
            "text": "<>  a pcdm:Object, schema:ImageObject .\n    pcdm:memberOf <someBook>\n    dc:title \u201cPage Title\u201d .\n    dc:description \u201cPage description\u201d .\n    \u2026 other descriptive metadata \u2026",
            "title": "Page"
        },
        {
            "location": "/mvp/mvp_doc/#page-proxy",
            "text": "<>  a ore:Proxy\n    ore:proxyFor <somePage>\n    ore:proxyIn <someBook>\n    iana:prev <prevPageProxy>\n    iana:next <nextPageProxy>",
            "title": "Page Proxy"
        },
        {
            "location": "/mvp/mvp_doc/#page-preservation-master-file",
            "text": "<>  a pcdmuse:PreservationMasterFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/tiff\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Page Preservation Master File"
        },
        {
            "location": "/mvp/mvp_doc/#page-intermediate-file",
            "text": "<>  a pcdmuse:IntermediateFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/jp2\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Page Intermediate File"
        },
        {
            "location": "/mvp/mvp_doc/#page-service-file",
            "text": "<>  a pcdmuse:ServiceFile .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/jpeg\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Page Service File"
        },
        {
            "location": "/mvp/mvp_doc/#page-thumbnail-file",
            "text": "<>  a pcdmuse:ThumbnailImage .\n    pcdm:fileOf <somePage>\n    ebucore:hasMimeType \u201cimage/png\u201d\n    \u2026 other technical metadata \u2026",
            "title": "Page Thumbnail File"
        },
        {
            "location": "/mvp/mvp_doc/#drupal-8_1",
            "text": "Objects will be modeled using  content entities  in Drupal 8. The content entities store their metadata as Drupal fields, which are mapped to RDF using an  rdf mapping . An RDF mapping not only allows metadata to be transformed into json-ld, but it also controls which properties from Drupal get preserved in Fedora.  Files will be modeled using  media entities . Media entities attempt to provide the base storage component for the Drupal 8. They can model any type of media, including local files, YouTube\nvideos, Tweets, Instagram photos, etc\u2026  Ingests and edits can be done for an entire graph of entities using  inline entity forms . Although flushing back to Fedora happens at the per-Resource level, using inline entity forms makes the  named graph  the default unit of work for a repository architect.  Here\u2019s an example of what an ingest form could look like using inline entity forms:   Here\u2019s a list of the entities required to meet our goals. Each of these entities must have basic RESTful CRUD operations exposed for clients.   RdfResource  NonRdfResource  Proxy  Object  File  Collection  Image  Page  Book   Individual entities and named graphs can be imported and exported in  json-ld format  using  json-ld contexts .",
            "title": "Drupal 8"
        },
        {
            "location": "/technical-documentation/docs-build/",
            "text": "Introduction\n\n\nThis documentation is built using \nmkdocs\n, a static site generator that is geared towards building project documentation. The documentation is created in the \nMarkdown\n format, and it all resides in the \ndocs\n directory in the repository. The organization of the documenation is controlled by the \nmkdocs.yml\n in the root of the repository.\n\n\nBuild and Deploy documentation\n\n\nDocumentation is build by running to the following command in the root of the repository:\n\n\nmkdocs build --clean\n\n\nThis command will create a static \nsite\n folder in the root of the repository. \n\n\nYou can preview any changes you have made to the documentation by running the following command:\n\n\nmkdocs serve\n\n\nAnd then visiting http://localhost:8111 in your browser.\n\n\nTo deploy documenation to GitHub Pages, issue the following command:\n\n\nmkdocs gh-deploy --clean",
            "title": "How to build documenation"
        },
        {
            "location": "/technical-documentation/docs-build/#introduction",
            "text": "This documentation is built using  mkdocs , a static site generator that is geared towards building project documentation. The documentation is created in the  Markdown  format, and it all resides in the  docs  directory in the repository. The organization of the documenation is controlled by the  mkdocs.yml  in the root of the repository.",
            "title": "Introduction"
        },
        {
            "location": "/technical-documentation/docs-build/#build-and-deploy-documentation",
            "text": "Documentation is build by running to the following command in the root of the repository:  mkdocs build --clean  This command will create a static  site  folder in the root of the repository.   You can preview any changes you have made to the documentation by running the following command:  mkdocs serve  And then visiting http://localhost:8111 in your browser.  To deploy documenation to GitHub Pages, issue the following command:  mkdocs gh-deploy --clean",
            "title": "Build and Deploy documentation"
        },
        {
            "location": "/technical-documentation/versioning/",
            "text": "Versioning Policy\n\n\nIslandora CLAW uses \nsemantic versioning\n, except for Drupal modules.\n\n\nComponents\n\n\nSemantic Versioning\n\n\nMajor version\n . \nMinor version\n . \nPatch\n\n\n\n\nMajor version\n; Major changes, and breaks the API\n\n\nMinor version\n; New features, and does not break the API\n\n\nPatch\n; Bug fixes, and never breaks backward compatability\n\n\n\n\nExample: 1.2.3\n\n\n\n\nAlpaca\n\n\nCLAW\n\n\nclaw_vagrant\n\n\nSyn\n\n\n\n\nDrupal Contrib Versioning\n\n\nCore Compatibility\n - \nMajor\n . \nPatchLevel[-Extra]\n\n\nExample: 8.x-1.1\n\n\n\n\nclaw-jsonld\n\n\ndrupal-project\n\n\nislandora\n\n\nislandora collection\n\n\nislandora image",
            "title": "Versioning Policy"
        },
        {
            "location": "/technical-documentation/versioning/#versioning-policy",
            "text": "Islandora CLAW uses  semantic versioning , except for Drupal modules.",
            "title": "Versioning Policy"
        },
        {
            "location": "/technical-documentation/versioning/#components",
            "text": "",
            "title": "Components"
        },
        {
            "location": "/technical-documentation/versioning/#semantic-versioning",
            "text": "Major version  .  Minor version  .  Patch   Major version ; Major changes, and breaks the API  Minor version ; New features, and does not break the API  Patch ; Bug fixes, and never breaks backward compatability   Example: 1.2.3   Alpaca  CLAW  claw_vagrant  Syn",
            "title": "Semantic Versioning"
        },
        {
            "location": "/technical-documentation/versioning/#drupal-contrib-versioning",
            "text": "Core Compatibility  -  Major  .  PatchLevel[-Extra]  Example: 8.x-1.1   claw-jsonld  drupal-project  islandora  islandora collection  islandora image",
            "title": "Drupal Contrib Versioning"
        },
        {
            "location": "/",
            "text": "Islandora CLAW\n\n\nIntroduction\n\n\nIslandora CLAW is the next generation of Islandora. Still in development, this major upgrade will be compatible with \nFedora 4\n.\n\n\nFor more details, please check out the following resources:\n\n\n\n\nWeekly Tech Calls\n\n\n2015\n\n\n2016\n\n\n2017\n\n\nContributing\n\n\n\n\nRepository Structure\n\n\n\n\nAlpaca\n: Event driven middleware based on Apache Camel that synchronizes a Fedora 4 with Drupal.  \n\n\ndocs\n: Documentation!\n\n\nclaw_install\n: Bleeding edge development environment\n\n\nislandora\n: Islandora CLAW Drupal core module\n\n\nislandora_collection\n: Islandora CLAW Drupal collection module\n\n\nislandora_image\n: Islandora CLAW Drupal image module\n\n\n\n\nNote\n: the \nAnsible\n and \nDocker\n repositories were early experimental provisioning tools for the CLAW stack, and are currently \nnot\n supported. For context see \nthis\n. Development is focused on \nclaw_vagrant\n, which is the recommended starting point for working with CLAW.\n\n\nSponsors\n\n\n\n\nUPEI\n\n\ndiscoverygarden inc.\n\n\nLYRASIS\n\n\nMcMaster University\n\n\nUniversity of Limerick\n\n\nYork University\n\n\nUniversity of Manitoba\n\n\nSimon Fraser University\n\n\nPALS\n\n\nAmerican Philosophical Society\n\n\nCommon Media Inc.\n\n\n\n\nMaintainers\n\n\n\n\nNick Ruest\n\n\nDaniel Lamb\n\n\nJared Whiklo\n\n\nDiego Pino\n\n\n\n\nDevelopment\n\n\nIf you would like to contribute, please get involved by attending our weekly \nTech Call\n. We love to hear from you!\n\n\nIf you would like to contribute code to the project, you need to be covered by an Islandora Foundation \nContributor License Agreement\n or \nCorporate Contributor Licencse Agreement\n. Please see the \nContributors\n pages on Islandora.ca for more information.\n\n\nIf you want to pull down the submodules for development, don't forget to run \ngit submodule update --init --recursive\n after cloning.",
            "title": "Islandora CLAW"
        },
        {
            "location": "/#islandora-claw",
            "text": "",
            "title": "Islandora CLAW"
        },
        {
            "location": "/#introduction",
            "text": "Islandora CLAW is the next generation of Islandora. Still in development, this major upgrade will be compatible with  Fedora 4 .  For more details, please check out the following resources:   Weekly Tech Calls  2015  2016  2017  Contributing",
            "title": "Introduction"
        },
        {
            "location": "/#repository-structure",
            "text": "Alpaca : Event driven middleware based on Apache Camel that synchronizes a Fedora 4 with Drupal.    docs : Documentation!  claw_install : Bleeding edge development environment  islandora : Islandora CLAW Drupal core module  islandora_collection : Islandora CLAW Drupal collection module  islandora_image : Islandora CLAW Drupal image module   Note : the  Ansible  and  Docker  repositories were early experimental provisioning tools for the CLAW stack, and are currently  not  supported. For context see  this . Development is focused on  claw_vagrant , which is the recommended starting point for working with CLAW.",
            "title": "Repository Structure"
        },
        {
            "location": "/#sponsors",
            "text": "UPEI  discoverygarden inc.  LYRASIS  McMaster University  University of Limerick  York University  University of Manitoba  Simon Fraser University  PALS  American Philosophical Society  Common Media Inc.",
            "title": "Sponsors"
        },
        {
            "location": "/#maintainers",
            "text": "Nick Ruest  Daniel Lamb  Jared Whiklo  Diego Pino",
            "title": "Maintainers"
        },
        {
            "location": "/#development",
            "text": "If you would like to contribute, please get involved by attending our weekly  Tech Call . We love to hear from you!  If you would like to contribute code to the project, you need to be covered by an Islandora Foundation  Contributor License Agreement  or  Corporate Contributor Licencse Agreement . Please see the  Contributors  pages on Islandora.ca for more information.  If you want to pull down the submodules for development, don't forget to run  git submodule update --init --recursive  after cloning.",
            "title": "Development"
        },
        {
            "location": "/alpaca/README/",
            "text": "Alpaca\n\n\n\n\n\n\n\n\nDescription\n\n\nEvent-driven middleware based on \nApache Camel\n that synchronizes a Fedora 4 repository with a Drupal instance.\n\n\nBuilding\n\n\nThis project requires Java 8 and can be built with \nGradle\n. To build and test locally, use \n./gradlew build\n.\n\n\nSponsors\n\n\n\n\nDiscoverygarden\n\n\nLYRASIS\n\n\nYork University\n\n\nMcMaster University\n\n\nUniversity of Prince Edward Island\n\n\nUniversity of Manitoba\n\n\nUniversity of Limerick\n\n\nSimon Fraser University\n\n\nPALS\n\n\n\n\nMaintainers\n\n\n\n\nNick Ruest\n\n\nDaniel Lamb\n\n\n\n\nDevelopment\n\n\nIf you would like to contribute, please get involved by attending our weekly \nTech Call\n. We love to hear from you!\n\n\nIf you would like to contribute code to the project, you need to be covered by an Islandora Foundation \nContributor License Agreement\n or \nCorporate Contributor Licencse Agreement\n. Please see the \nContributors\n pages on Islandora.ca for more information.\n\n\nLicensing\n\n\nMIT",
            "title": "Alpaca"
        },
        {
            "location": "/alpaca/README/#alpaca",
            "text": "",
            "title": "Alpaca"
        },
        {
            "location": "/alpaca/README/#description",
            "text": "Event-driven middleware based on  Apache Camel  that synchronizes a Fedora 4 repository with a Drupal instance.",
            "title": "Description"
        },
        {
            "location": "/alpaca/README/#building",
            "text": "This project requires Java 8 and can be built with  Gradle . To build and test locally, use  ./gradlew build .",
            "title": "Building"
        },
        {
            "location": "/alpaca/README/#sponsors",
            "text": "Discoverygarden  LYRASIS  York University  McMaster University  University of Prince Edward Island  University of Manitoba  University of Limerick  Simon Fraser University  PALS",
            "title": "Sponsors"
        },
        {
            "location": "/alpaca/README/#maintainers",
            "text": "Nick Ruest  Daniel Lamb",
            "title": "Maintainers"
        },
        {
            "location": "/alpaca/README/#development",
            "text": "If you would like to contribute, please get involved by attending our weekly  Tech Call . We love to hear from you!  If you would like to contribute code to the project, you need to be covered by an Islandora Foundation  Contributor License Agreement  or  Corporate Contributor Licencse Agreement . Please see the  Contributors  pages on Islandora.ca for more information.",
            "title": "Development"
        },
        {
            "location": "/alpaca/README/#licensing",
            "text": "MIT",
            "title": "Licensing"
        },
        {
            "location": "/islandora/README/",
            "text": "Islandora\n\n\n\n\n\n\n\n\nIntroduction\n\n\nIslandora modules for Drupal 8.2.x\n\n\nMaintainers\n\n\nCurrent maintainers:\n\n\n\n\nDiego Pino\n\n\nJared Whiklo\n\n\n\n\nDevelopment\n\n\nIf you would like to contribute, please get involved by attending our weekly \nTech Call\n. We love to hear from you!\n\n\nIf you would like to contribute code to the project, you need to be covered by an Islandora Foundation \nContributor License Agreement\n or \nCorporate Contributor Licencse Agreement\n. Please see the \nContributors\n pages on Islandora.ca for more information.\n\n\nLicense\n\n\nGPLv2",
            "title": "Islandora"
        },
        {
            "location": "/islandora/README/#islandora",
            "text": "",
            "title": "Islandora"
        },
        {
            "location": "/islandora/README/#introduction",
            "text": "Islandora modules for Drupal 8.2.x",
            "title": "Introduction"
        },
        {
            "location": "/islandora/README/#maintainers",
            "text": "Current maintainers:   Diego Pino  Jared Whiklo",
            "title": "Maintainers"
        },
        {
            "location": "/islandora/README/#development",
            "text": "If you would like to contribute, please get involved by attending our weekly  Tech Call . We love to hear from you!  If you would like to contribute code to the project, you need to be covered by an Islandora Foundation  Contributor License Agreement  or  Corporate Contributor Licencse Agreement . Please see the  Contributors  pages on Islandora.ca for more information.",
            "title": "Development"
        },
        {
            "location": "/islandora/README/#license",
            "text": "GPLv2",
            "title": "License"
        },
        {
            "location": "/islandora_collection/README/",
            "text": "Islandora Collection\n\n\n\n\n\n\n\n\nIntroduction\n\n\nIslandora Collection module for Drupal 8.2.x\n\n\nMaintainers\n\n\nCurrent maintainers:\n\n\n\n\nDanny Lamb\n\n\nDiego Pino\n\n\nJared Whiklo\n\n\n\n\nDevelopment\n\n\nIf you would like to contribute, please get involved by attending our weekly \nTech Call\n. We love to hear from you!\n\n\nIf you would like to contribute code to the project, you need to be covered by an Islandora Foundation \nContributor License Agreement\n or \nCorporate Contributor Licencse Agreement\n. Please see the \nContributors\n pages on Islandora.ca for more information.\n\n\nLicense\n\n\nGPLv2",
            "title": "Islandora Collection"
        },
        {
            "location": "/islandora_collection/README/#islandora-collection",
            "text": "",
            "title": "Islandora Collection"
        },
        {
            "location": "/islandora_collection/README/#introduction",
            "text": "Islandora Collection module for Drupal 8.2.x",
            "title": "Introduction"
        },
        {
            "location": "/islandora_collection/README/#maintainers",
            "text": "Current maintainers:   Danny Lamb  Diego Pino  Jared Whiklo",
            "title": "Maintainers"
        },
        {
            "location": "/islandora_collection/README/#development",
            "text": "If you would like to contribute, please get involved by attending our weekly  Tech Call . We love to hear from you!  If you would like to contribute code to the project, you need to be covered by an Islandora Foundation  Contributor License Agreement  or  Corporate Contributor Licencse Agreement . Please see the  Contributors  pages on Islandora.ca for more information.",
            "title": "Development"
        },
        {
            "location": "/islandora_collection/README/#license",
            "text": "GPLv2",
            "title": "License"
        },
        {
            "location": "/islandora_image/README/",
            "text": "Islandora Image\n\n\n\n\n\n\n\n\nIntroduction\n\n\nIslandora Image module for Drupal 8.2.x\n\n\nMaintainers\n\n\nCurrent maintainers:\n\n\n\n\nDanny Lamb\n\n\n\n\nDevelopment\n\n\nIf you would like to contribute, please get involved by attending our weekly \nTech Call\n. We love to hear from you!\n\n\nIf you would like to contribute code to the project, you need to be covered by an Islandora Foundation \nContributor License Agreement\n or \nCorporate Contributor Licencse Agreement\n. Please see the \nContributors\n pages on Islandora.ca for more information.\n\n\nLicense\n\n\nGPLv2",
            "title": "Islandora Image"
        },
        {
            "location": "/islandora_image/README/#islandora-image",
            "text": "",
            "title": "Islandora Image"
        },
        {
            "location": "/islandora_image/README/#introduction",
            "text": "Islandora Image module for Drupal 8.2.x",
            "title": "Introduction"
        },
        {
            "location": "/islandora_image/README/#maintainers",
            "text": "Current maintainers:   Danny Lamb",
            "title": "Maintainers"
        },
        {
            "location": "/islandora_image/README/#development",
            "text": "If you would like to contribute, please get involved by attending our weekly  Tech Call . We love to hear from you!  If you would like to contribute code to the project, you need to be covered by an Islandora Foundation  Contributor License Agreement  or  Corporate Contributor Licencse Agreement . Please see the  Contributors  pages on Islandora.ca for more information.",
            "title": "Development"
        },
        {
            "location": "/islandora_image/README/#license",
            "text": "GPLv2",
            "title": "License"
        },
        {
            "location": "/install/README/",
            "text": "Introduction\n\n\nThe is a development environment virtual machine for the Islandora and Fedora 4 project. It should work on any operating system that supports VirtualBox and Vagrant.\n\n\nN.B. This virtual machine \nshould not\n be used in production.\n\n\nRequirements\n\n\n\n\nVirtualBox\n\n\nVagrant\n 1.8.5+\n\n\ngit\n\n\n\n\nVariables\n\n\nSystem Resources\n\n\nBy default the virtual machine that is built uses 2GB of RAM. Your host machine will need to be able to support the additional memory use. You can override the CPU and RAM allocation by creating \nISLANDORA_VAGRANT_CPUS\n and \nISLANDORA_VAGRANT_MEMORY\n environment variables and setting the values. For example, on an Ubuntu host you could add to \n~/.bashrc\n:\n\n\nexport ISLANDORA_VAGRANT_CPUS=4\nexport ISLANDORA_VAGRANT_MEMORY=4096\n\n\n\n\nHostname and Description\n\n\nIf you use a DNS or host file management plugin with Vagrant, you may want to set a specific hostname for the virtual machine. You can do that with the \nISLANDORA_VAGRANT_HOSTNAME\n variable.  The \nISLANDORA_VAGRANT_VIRTUALBOXDESCRIPTION\n variables can be used to track the VM build. For example:\n\n\nexport ISLANDORA_VAGRANT_HOSTNAME=\"islandora-deux\"\nexport ISLANDORA_VAGRANT_VIRTUALBOXDESCRIPTION=\"Islandora CLAW\"\n\n\n\n\nUse\n\n\nVirtualBox:\n\n\n\n\ngit clone https://github.com/Islandora-CLAW/CLAW\n\n\ncd CLAW\n\n\ngit submodule update --init --recursive\n\n\ncd install\n\n\nVisit https://github.com/settings/tokens and get an oauth token (check the 'repos' checkbox when making it) and place it \nhere\n\n\nvagrant up\n\n\n\n\nDigitalOcean:\n\n\n\n\ngit clone https://github.com/Islandora-CLAW/CLAW\n\n\ncd CLAW\n\n\ngit submodule update --init --recursive\n\n\ncd install\n\n\nvagrant plugin install vagrant-digitalocean\n\n\nSet the following environment variables:\n\n\nDIGITALOCEAN_TOKEN\n -- Your DigitalOcean API token\n\n\nDIGITALOCEAN_KEYNAME\n -- Your DigitalOcean ssh key name\n\n\nDIGITALOCEAN_KEYPATH\n -- Path to your ssh keys that you've setup with DigitalOcean\n\n\nVisit https://github.com/settings/tokens and get an oauth token (check the 'repos' checkbox when making it) and place it \nhere\n\n\nvagrant up --provider=digital_ocean\n\n\n\n\nConnect\n\n\nYou can connect to the machine via the browser at \nhttp://localhost:8000\n.\n\n\nThe default Drupal login details are:\n\n\n\n\nusername: admin\n\n\npassword: islandora\n\n\n\n\nMySQL:\n\n\n\n\nusername: root\n\n\npassword: islandora\n\n\n\n\nThe Fedora 4 REST API can be accessed at \nhttp://localhost:8080/fcrepo/rest\n.  It currently has authentication disabled.\n\n\nTomcat Manager:\n\n\n\n\nusername: islandora\n\n\npassword: islandora\n\n\n\n\nYou can connect to the machine via ssh: \nssh -p 2222 vagrant@localhost\n\n\nThe default VM login details are:\n\n\n\n\nusername: vagrant\n\n\npassword: vagrant\n\n\n\n\nEnvironment\n\n\n\n\nUbuntu 16.04.1\n\n\nDrupal 8.1.10\n\n\nMySQL 5.7.15\n\n\nApache 2.4.18\n\n\nTomcat 7.0.68.0\n\n\nSolr 6.2.1\n\n\nCamel 2.15.1\n\n\nFedora 4.6.0\n\n\nFedora Camel Component 4.4.0\n\n\nBlazeGraph 1.5.1\n\n\nKaraf 4.0.5\n\n\nAlpaca 0.0.1-SNAPSHOT\n\n\nIslandora 8.x-1.x\n\n\nLoris HEAD\n\n\nPHP 7.0.8\n\n\nJava 8 (Oracle)\n\n\n\n\nWindows Troubleshooting\n\n\nIf you receive errors involving \n\\r\n (end of line) you have two options:\n\n\n\n\nClone down the current development branch using \n--single-branch\n.\n\n\n\n\ngit clone --single-branch --branch sprint-002 git@github.com:Islandora-CLAW/CLAW.git <optional directory name>\n\n  A benifit to this approach is that files created or edited on a Windows environment will be pushed back to your fork with appropriate \nLF\n endings.\n\n\n\n\nModify your global \n.gitconfig\n file to disable the Windows behavior of \nautocrlf\n entirely.\n\n\n\n\nEdit the global \n.gitconfig\n file, find the line:\n  \nautocrlf = true\n\n  and change it to\n  \nautocrlf = false\n\n  Remove and clone again. This will prevent Windows git clients from automatically replacing Unix line endings LF with Windows line endings CRLF.",
            "title": "Installation (Vagrant)"
        },
        {
            "location": "/install/README/#introduction",
            "text": "The is a development environment virtual machine for the Islandora and Fedora 4 project. It should work on any operating system that supports VirtualBox and Vagrant.  N.B. This virtual machine  should not  be used in production.",
            "title": "Introduction"
        },
        {
            "location": "/install/README/#requirements",
            "text": "VirtualBox  Vagrant  1.8.5+  git",
            "title": "Requirements"
        },
        {
            "location": "/install/README/#variables",
            "text": "",
            "title": "Variables"
        },
        {
            "location": "/install/README/#system-resources",
            "text": "By default the virtual machine that is built uses 2GB of RAM. Your host machine will need to be able to support the additional memory use. You can override the CPU and RAM allocation by creating  ISLANDORA_VAGRANT_CPUS  and  ISLANDORA_VAGRANT_MEMORY  environment variables and setting the values. For example, on an Ubuntu host you could add to  ~/.bashrc :  export ISLANDORA_VAGRANT_CPUS=4\nexport ISLANDORA_VAGRANT_MEMORY=4096",
            "title": "System Resources"
        },
        {
            "location": "/install/README/#hostname-and-description",
            "text": "If you use a DNS or host file management plugin with Vagrant, you may want to set a specific hostname for the virtual machine. You can do that with the  ISLANDORA_VAGRANT_HOSTNAME  variable.  The  ISLANDORA_VAGRANT_VIRTUALBOXDESCRIPTION  variables can be used to track the VM build. For example:  export ISLANDORA_VAGRANT_HOSTNAME=\"islandora-deux\"\nexport ISLANDORA_VAGRANT_VIRTUALBOXDESCRIPTION=\"Islandora CLAW\"",
            "title": "Hostname and Description"
        },
        {
            "location": "/install/README/#use",
            "text": "VirtualBox:   git clone https://github.com/Islandora-CLAW/CLAW  cd CLAW  git submodule update --init --recursive  cd install  Visit https://github.com/settings/tokens and get an oauth token (check the 'repos' checkbox when making it) and place it  here  vagrant up   DigitalOcean:   git clone https://github.com/Islandora-CLAW/CLAW  cd CLAW  git submodule update --init --recursive  cd install  vagrant plugin install vagrant-digitalocean  Set the following environment variables:  DIGITALOCEAN_TOKEN  -- Your DigitalOcean API token  DIGITALOCEAN_KEYNAME  -- Your DigitalOcean ssh key name  DIGITALOCEAN_KEYPATH  -- Path to your ssh keys that you've setup with DigitalOcean  Visit https://github.com/settings/tokens and get an oauth token (check the 'repos' checkbox when making it) and place it  here  vagrant up --provider=digital_ocean",
            "title": "Use"
        },
        {
            "location": "/install/README/#connect",
            "text": "You can connect to the machine via the browser at  http://localhost:8000 .  The default Drupal login details are:   username: admin  password: islandora   MySQL:   username: root  password: islandora   The Fedora 4 REST API can be accessed at  http://localhost:8080/fcrepo/rest .  It currently has authentication disabled.  Tomcat Manager:   username: islandora  password: islandora   You can connect to the machine via ssh:  ssh -p 2222 vagrant@localhost  The default VM login details are:   username: vagrant  password: vagrant",
            "title": "Connect"
        },
        {
            "location": "/install/README/#environment",
            "text": "Ubuntu 16.04.1  Drupal 8.1.10  MySQL 5.7.15  Apache 2.4.18  Tomcat 7.0.68.0  Solr 6.2.1  Camel 2.15.1  Fedora 4.6.0  Fedora Camel Component 4.4.0  BlazeGraph 1.5.1  Karaf 4.0.5  Alpaca 0.0.1-SNAPSHOT  Islandora 8.x-1.x  Loris HEAD  PHP 7.0.8  Java 8 (Oracle)",
            "title": "Environment"
        },
        {
            "location": "/install/README/#windows-troubleshooting",
            "text": "If you receive errors involving  \\r  (end of line) you have two options:   Clone down the current development branch using  --single-branch .   git clone --single-branch --branch sprint-002 git@github.com:Islandora-CLAW/CLAW.git <optional directory name> \n  A benifit to this approach is that files created or edited on a Windows environment will be pushed back to your fork with appropriate  LF  endings.   Modify your global  .gitconfig  file to disable the Windows behavior of  autocrlf  entirely.   Edit the global  .gitconfig  file, find the line:\n   autocrlf = true \n  and change it to\n   autocrlf = false \n  Remove and clone again. This will prevent Windows git clients from automatically replacing Unix line endings LF with Windows line endings CRLF.",
            "title": "Windows Troubleshooting"
        },
        {
            "location": "/contributing/CONTRIBUTING/",
            "text": "Welcome!\n\n\nIf you are reading this document then you are interested in contributing to the Islandora and Fedora 4 project. All contributions are welcome: use-cases, documentation, code, patches, bug reports, feature requests, etc. You do not need to be a programmer to speak up!\n\n\nWorkflows\n\n\nThe group meets each Wednesday at 1PM Eastern. Meeting notes and announcements are posted to the \nIslandora community list\n and the \nIslandora developers list\n. You can view meeting agendas, notes, and call-in information \nhere\n. Anybody is welcome to join the calls, and add items to the agenda.\n\n\nUse cases\n\n\nIf you would like to submit a use case for the Islandora and Fedora integration project, please submit and issue \nhere\n using the \nUse Case template\n, assign the \"use case\" label to the issue.\n\n\nDocumentation\n\n\nYou can contribute documentation in two different ways. One way is to create an issue \nhere\n assign the \"documentation\" label to the issue. Another way is to by pull request, same process as \nContribute Code\n. All documentation resides in \ndocs\n.\n\n\nRequest a new feature\n\n\nTo request a new feature you should \nopen an issue\n or create a \nuse case\n (see \nuse case\n section above), and summarize the desired functionality. Select the label \"enhancement\" if creating an issue on the project repo, and \"use case\" if creating a use case in the interest group repo.\n\n\nReport a bug\n\n\nTo report a bug you should \nopen an issue\n that summarizes the bug. Set the label to \"bug\".\n\n\nIn order to help us understand and fix the bug it would be great if you could provide us with:\n\n\n\n\nThe steps to reproduce the bug. This includes information about e.g. the Islandora version you were using along with version of stack components.\n\n\nThe expected behavior.\n\n\nThe actual, incorrect behavior.\n\n\n\n\nFeel free to search the issue queue for existing issues (aka tickets) that already describe the problem; if there is such a ticket please add your information as a comment.\n\n\nIf you want to provide a pull along with your bug report:\n\n\nThat is great! In this case please send us a pull request as described in section \nCreate a pull request\n below.\n\n\nContribute code\n\n\nBefore you set out to contribute code you will need to have completed a \nContributor License Agreement\n or be covered by a \nCorporate Contributor Licencse Agreement\n. The signed copy of the license agreement should be sent to \ncommunity@islandora.ca\n\n\nIf you are interested in contributing code to Islandora but do not know where to begin:\n\n\nIn this case you should \nbrowse open issues\n, and or \nuse cases\n.\n\n\nIf you are contributing Drupal code, it must adhere to \nDrupal Coding Standards\n; Travis CI will check for this on pull requests.\n\n\nContributions to the Islandora codebase should be sent as GitHub pull requests. See section \nCreate a pull request\n below for details. If there is any problem with the pull request we can work through it using the commenting features of GitHub.\n\n\n\n\nFor \nsmall patches\n, feel free to submit pull requests directly for those patches.\n\n\n\n\nFor \nlarger code contributions\n, please use the following process. The idea behind this process is to prevent any wasted work and catch design issues early on.\n\n\n\n\nOpen an issue\n and assign it the label of \"enhancement\", if a similar issue does not exist already. If a similar issue does exist, then you may consider participating in the work on the existing issue.\n\n\nComment on the issue with your plan for implementing the issue. Explain what pieces of the codebase you are going to touch and how everything is going to fit together.\n\n\nIslandora committers will work with you on the design to make sure you are on the right track.\n\n\nImplement your issue, create a pull request (see below), and iterate from there.\n\n\n\n\n\n\n\n\nCreate a pull request\n\n\nTake a look at \nCreating a pull request\n. In a nutshell you need to:\n\n\n\n\nFork\n the Islandora GitHub repository at \nhttps://github.com/Islandora-CLAW/CLAW\n to your personal GitHub account. If you already have a fork of \nhttps://github.com/Islandora/islandora\n Github will prevent you from creating a new fork; in such a case you can continue to use \nhttps://github.com/Islandora/islandora\n to issue pull request, be cautious of which branches you work from though (you'll want to base your work off of 7.x-2.x). Also be cautious of which repository your issuing your Pull Request to (you'll want to issue your pull request to \nhttps://github.com/Islandora-CLAW/CLAW\n). See \nFork a repo\n for detailed instructions.\n\n\nCommit any changes to your fork.\n\n\nSend a \npull request\n to the Islandora GitHub repository that you forked in step 1.  If your pull request is related to an existing issue -- for instance, because you reported a \nbug/issue\n earlier -- prefix the title of your pull request with the corresponding issue number (e.g. \nissue-123: ...\n). Please also include a reference to the issue in the description of the pull. This can be done by using '#' plus the issue number like so '#123', also try to pick an appropriate name for the branch in which you're issuing the pull request from. \n\n\n\n\nYou may want to read \nSyncing a fork\n for instructions on how to keep your fork up to date with the latest changes of the upstream (official) \nislandora\n repository.\n\n\nLicense Agreements\n\n\nThe Islandora Foundation requires that contributors complete a \nContributor License Agreement\n or be covered by a \nCorporate Contributor Licencse Agreement\n. The signed copy of the license agreement should be sent to \ncommunity@islandora.ca\n. This license is for your protection as a contributor as well as the protection of the Foundation and its users; it does not change your rights to use your own contributions for any other purpose.",
            "title": "How to contribute"
        },
        {
            "location": "/contributing/CONTRIBUTING/#welcome",
            "text": "If you are reading this document then you are interested in contributing to the Islandora and Fedora 4 project. All contributions are welcome: use-cases, documentation, code, patches, bug reports, feature requests, etc. You do not need to be a programmer to speak up!",
            "title": "Welcome!"
        },
        {
            "location": "/contributing/CONTRIBUTING/#workflows",
            "text": "The group meets each Wednesday at 1PM Eastern. Meeting notes and announcements are posted to the  Islandora community list  and the  Islandora developers list . You can view meeting agendas, notes, and call-in information  here . Anybody is welcome to join the calls, and add items to the agenda.",
            "title": "Workflows"
        },
        {
            "location": "/contributing/CONTRIBUTING/#use-cases",
            "text": "If you would like to submit a use case for the Islandora and Fedora integration project, please submit and issue  here  using the  Use Case template , assign the \"use case\" label to the issue.",
            "title": "Use cases"
        },
        {
            "location": "/contributing/CONTRIBUTING/#documentation",
            "text": "You can contribute documentation in two different ways. One way is to create an issue  here  assign the \"documentation\" label to the issue. Another way is to by pull request, same process as  Contribute Code . All documentation resides in  docs .",
            "title": "Documentation"
        },
        {
            "location": "/contributing/CONTRIBUTING/#request-a-new-feature",
            "text": "To request a new feature you should  open an issue  or create a  use case  (see  use case  section above), and summarize the desired functionality. Select the label \"enhancement\" if creating an issue on the project repo, and \"use case\" if creating a use case in the interest group repo.",
            "title": "Request a new feature"
        },
        {
            "location": "/contributing/CONTRIBUTING/#report-a-bug",
            "text": "To report a bug you should  open an issue  that summarizes the bug. Set the label to \"bug\".  In order to help us understand and fix the bug it would be great if you could provide us with:   The steps to reproduce the bug. This includes information about e.g. the Islandora version you were using along with version of stack components.  The expected behavior.  The actual, incorrect behavior.   Feel free to search the issue queue for existing issues (aka tickets) that already describe the problem; if there is such a ticket please add your information as a comment.  If you want to provide a pull along with your bug report:  That is great! In this case please send us a pull request as described in section  Create a pull request  below.",
            "title": "Report a bug"
        },
        {
            "location": "/contributing/CONTRIBUTING/#contribute-code",
            "text": "Before you set out to contribute code you will need to have completed a  Contributor License Agreement  or be covered by a  Corporate Contributor Licencse Agreement . The signed copy of the license agreement should be sent to  community@islandora.ca  If you are interested in contributing code to Islandora but do not know where to begin:  In this case you should  browse open issues , and or  use cases .  If you are contributing Drupal code, it must adhere to  Drupal Coding Standards ; Travis CI will check for this on pull requests.  Contributions to the Islandora codebase should be sent as GitHub pull requests. See section  Create a pull request  below for details. If there is any problem with the pull request we can work through it using the commenting features of GitHub.   For  small patches , feel free to submit pull requests directly for those patches.   For  larger code contributions , please use the following process. The idea behind this process is to prevent any wasted work and catch design issues early on.   Open an issue  and assign it the label of \"enhancement\", if a similar issue does not exist already. If a similar issue does exist, then you may consider participating in the work on the existing issue.  Comment on the issue with your plan for implementing the issue. Explain what pieces of the codebase you are going to touch and how everything is going to fit together.  Islandora committers will work with you on the design to make sure you are on the right track.  Implement your issue, create a pull request (see below), and iterate from there.",
            "title": "Contribute code"
        },
        {
            "location": "/contributing/CONTRIBUTING/#create-a-pull-request",
            "text": "Take a look at  Creating a pull request . In a nutshell you need to:   Fork  the Islandora GitHub repository at  https://github.com/Islandora-CLAW/CLAW  to your personal GitHub account. If you already have a fork of  https://github.com/Islandora/islandora  Github will prevent you from creating a new fork; in such a case you can continue to use  https://github.com/Islandora/islandora  to issue pull request, be cautious of which branches you work from though (you'll want to base your work off of 7.x-2.x). Also be cautious of which repository your issuing your Pull Request to (you'll want to issue your pull request to  https://github.com/Islandora-CLAW/CLAW ). See  Fork a repo  for detailed instructions.  Commit any changes to your fork.  Send a  pull request  to the Islandora GitHub repository that you forked in step 1.  If your pull request is related to an existing issue -- for instance, because you reported a  bug/issue  earlier -- prefix the title of your pull request with the corresponding issue number (e.g.  issue-123: ... ). Please also include a reference to the issue in the description of the pull. This can be done by using '#' plus the issue number like so '#123', also try to pick an appropriate name for the branch in which you're issuing the pull request from.    You may want to read  Syncing a fork  for instructions on how to keep your fork up to date with the latest changes of the upstream (official)  islandora  repository.",
            "title": "Create a pull request"
        },
        {
            "location": "/contributing/CONTRIBUTING/#license-agreements",
            "text": "The Islandora Foundation requires that contributors complete a  Contributor License Agreement  or be covered by a  Corporate Contributor Licencse Agreement . The signed copy of the license agreement should be sent to  community@islandora.ca . This license is for your protection as a contributor as well as the protection of the Foundation and its users; it does not change your rights to use your own contributions for any other purpose.",
            "title": "License Agreements"
        },
        {
            "location": "/contributing/committers/",
            "text": "Islandora CLAW Committers\n\n\nIslandora CLAW is open source and released under MIT and GPLv2 licenses. The software and associated documentation is developed collectively by a community of contributors and committers. All interested community members are encouraged to contribute to the project. Contributors who demonstrate sustained engagement with the project through quality participation in meetings, mailing lists, documentation and code updates can be nominated by existing committers to also become a committers. It should be emphasized that committers need not be limited to software developers. Community members with skills in documentation and testing, for example, can also be committers.\n\n\nRights\n\n\nCommitters share the following rights:\n\n\n\n\nWrite access to the codebase\n\n\nNomination privileges of new committers\n\n\nRelease management privileges\n\n\nBinding votes on procedural, code modification, and release issues\n\n\nAccess to the private committers mailing list\n\n\n\n\nResponsibilities\n\n\nCommitters share the following responsibilities:\n\n\n\n\nMonitor and respond to project mailing lists\n\n\nAttend project and technical meetings\n\n\nMonitor and vet bug-tracker issues\n\n\nReview and commit code contributions\n\n\nEnsure code contributions are properly licensed\n\n\nGuide and mentor new committers\n\n\n\n\nCommitters\n\n\nThe following is an alphabetized list of the current Islandora committers:\n\n\n\n\n\n\n\n\nName\n\n\nOrganization\n\n\nirc nick\n\n\n\n\n\n\n\n\n\n\nAaron Coburn\n\n\nAmherst College\n\n\nacoburn\n\n\n\n\n\n\nJonathan Green\n\n\nLYRASIS\n\n\njonathangee\n\n\n\n\n\n\nDanny Lamb\n\n\nIslandora Foundation\n\n\ndhlamb\n\n\n\n\n\n\nDiego Pino\n\n\nMETRO\n\n\ndiegopino\n\n\n\n\n\n\nNick Ruest\n\n\nYork University\n\n\nruebot\n\n\n\n\n\n\nJared Whiklo\n\n\nUniversity of Manitoba\n\n\nwhikloj\n\n\n\n\n\n\n\n\nGuidelines for assessing new candidates for committership\n\n\nWhen a contributor is nominated to become a committer, the following guidelines should be used by existing committers to evaluate the nominee's suitability.\n\n\nAbility to work cooperatively with peers\n\n\nHow do we evaluate? By the interactions they have through mail. By how they respond to criticism. By how they participate in decision-making process.\n\n\nAbility to be a mentor\n\n\nHow do we evaluate? By the interactions they have through mail. By how clear they are and how willing they are to point at appropriate background materials (or even create them).\n\n\nCommunity\n\n\nHow do we evaluate? By the interactions they have through mail. Do they help to answer questions raised on the mailing list; do they show a helpful attitude and respect for other's ideas.\n\n\nCommittment\n\n\nHow do we evaluate? By time, by sticking through tough issues, by helping on not-so-fun tasks as well.\n\n\nPersonal skill/ability\n\n\nHow do we evaluate? A solid general understanding of the project. Quality of discussion in mail. Patches (where applicable) easy to apply with only a cursory review.\n\n\nNew Committer Process\n\n\nThis section describes the process for handling the voting of a new committer.\n\n\nSummary:\n\n\n\n\nCall a vote (\ntemplates/committerVote.txt\n)\n\n\nClose a vote (\ntemplates/closeCommitterVote.txt\n)\n\n\nInvite the new committer (\ntemplates/committerInvite.txt\n), if no CLA is on file (\ntemplates/committerInviteCLA.txt\n)\n\n\n\n\nIf they accept, then do:\n\n\n\n\nAdd to Committer team of GitHub Islandora organization\n\n\nAdd to Committer team of GitHub Islandora-Labs organization\n\n\nAdd to islandora-committers google-group\n\n\nAdd to committers wiki page: Islandora Committers \n\n\nAnnounce the new committer (\ntemplate/committerAnnounce.txt\n)",
            "title": "Committers"
        },
        {
            "location": "/contributing/committers/#islandora-claw-committers",
            "text": "Islandora CLAW is open source and released under MIT and GPLv2 licenses. The software and associated documentation is developed collectively by a community of contributors and committers. All interested community members are encouraged to contribute to the project. Contributors who demonstrate sustained engagement with the project through quality participation in meetings, mailing lists, documentation and code updates can be nominated by existing committers to also become a committers. It should be emphasized that committers need not be limited to software developers. Community members with skills in documentation and testing, for example, can also be committers.",
            "title": "Islandora CLAW Committers"
        },
        {
            "location": "/contributing/committers/#rights",
            "text": "Committers share the following rights:   Write access to the codebase  Nomination privileges of new committers  Release management privileges  Binding votes on procedural, code modification, and release issues  Access to the private committers mailing list",
            "title": "Rights"
        },
        {
            "location": "/contributing/committers/#responsibilities",
            "text": "Committers share the following responsibilities:   Monitor and respond to project mailing lists  Attend project and technical meetings  Monitor and vet bug-tracker issues  Review and commit code contributions  Ensure code contributions are properly licensed  Guide and mentor new committers",
            "title": "Responsibilities"
        },
        {
            "location": "/contributing/committers/#committers",
            "text": "The following is an alphabetized list of the current Islandora committers:     Name  Organization  irc nick      Aaron Coburn  Amherst College  acoburn    Jonathan Green  LYRASIS  jonathangee    Danny Lamb  Islandora Foundation  dhlamb    Diego Pino  METRO  diegopino    Nick Ruest  York University  ruebot    Jared Whiklo  University of Manitoba  whikloj",
            "title": "Committers"
        },
        {
            "location": "/contributing/committers/#guidelines-for-assessing-new-candidates-for-committership",
            "text": "When a contributor is nominated to become a committer, the following guidelines should be used by existing committers to evaluate the nominee's suitability.",
            "title": "Guidelines for assessing new candidates for committership"
        },
        {
            "location": "/contributing/committers/#ability-to-work-cooperatively-with-peers",
            "text": "How do we evaluate? By the interactions they have through mail. By how they respond to criticism. By how they participate in decision-making process.",
            "title": "Ability to work cooperatively with peers"
        },
        {
            "location": "/contributing/committers/#ability-to-be-a-mentor",
            "text": "How do we evaluate? By the interactions they have through mail. By how clear they are and how willing they are to point at appropriate background materials (or even create them).",
            "title": "Ability to be a mentor"
        },
        {
            "location": "/contributing/committers/#community",
            "text": "How do we evaluate? By the interactions they have through mail. Do they help to answer questions raised on the mailing list; do they show a helpful attitude and respect for other's ideas.",
            "title": "Community"
        },
        {
            "location": "/contributing/committers/#committment",
            "text": "How do we evaluate? By time, by sticking through tough issues, by helping on not-so-fun tasks as well.",
            "title": "Committment"
        },
        {
            "location": "/contributing/committers/#personal-skillability",
            "text": "How do we evaluate? A solid general understanding of the project. Quality of discussion in mail. Patches (where applicable) easy to apply with only a cursory review.",
            "title": "Personal skill/ability"
        },
        {
            "location": "/contributing/committers/#new-committer-process",
            "text": "This section describes the process for handling the voting of a new committer.  Summary:   Call a vote ( templates/committerVote.txt )  Close a vote ( templates/closeCommitterVote.txt )  Invite the new committer ( templates/committerInvite.txt ), if no CLA is on file ( templates/committerInviteCLA.txt )   If they accept, then do:   Add to Committer team of GitHub Islandora organization  Add to Committer team of GitHub Islandora-Labs organization  Add to islandora-committers google-group  Add to committers wiki page: Islandora Committers   Announce the new committer ( template/committerAnnounce.txt )",
            "title": "New Committer Process"
        },
        {
            "location": "/contributing/hacking-on-islandora/",
            "text": "Hacking on Islandora CLAW\n\n\nOne of the goals of the Islandora CLAW project is to lower the barrier to entry for working on and with Islandora. A shared, consistent environment amongst developers is one of the best ways to do this. To get started hacking on Islandora CLAW with your very own development environment, all you need to do follow these steps:\n\n\n\n\nInstall \nVirtualBox\n\n\nInstall \nVagrant\n\n\nFork \nIslandora CLAW\n and clone it onto your machine using the master branch\n\n\n\n\n~ $ git clone -b master https://github.com/your_github_name/islandora.git\n\n\n\n\nOR\nIf you're already a developer and have previously forked and cloned Islandora CLAW, just add the master branch from Islandora-CLAW to your existing checkout:\n\n\n~ $ cd /path/to/islandora\n/path/to/CLAW $ git remote add claw https://github.com/Islandora-CLAW/CLAW.git\n/path/to/CLAW $ git fetch claw\n/path/to/CLAW $ git checkout master\n\n\n\n\n\n\nNavigate into the \ninstall\n directory of your master checkout\n\n\n\n\n~ $ cd /path/to/CLAW/install\n\n\n\n\n\n\nBuild your vm using \nvagrant up\n\n\n\n\n/path/to/CLAW/install $ vagrant up\n\n\n\n\nSit back and relax as your development environment is created for you! In a few minutes you\u2019ll have a brand new Islandora CLAW install that you can use and abuse as much as you\u2019d like. If you ever ruin your environment (trust me, it\u2019ll happen), you can always destroy it and bring up a new one at any time.\n\n\n~ $ cd /path/to/CLAW/install\n/path/to/CLAW/install $ vagrant destroy\n/path/to/CLAW/install $ vagrant up\n\n\n\n\nLogging in to your development environment\n\n\nYou can ssh into your development environment at any time by doing the following:\n\n\n~ $ cd /path/to/islandora/install\n/path/to/islandora/install $ vagrant ssh\nWelcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.13.0-45-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\n\n System information disabled due to load higher than 1.0\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n\nLast login: Fri Jul 17 13:51:38 2015 from 10.0.2.2\nvagrant@islandora:~$\n\n\n\n\nYou'll be logged in as the vagrant user, with your github repo in your home directory.\n\n\nPort Forwarding\n\n\nMany ports are forwarded from your virtual machine to your personal computer, so care must be taken that there are no conflicts. Here's a list of all the ports that get forwarded:\n- Apache: 80 -> 8000\n- Tomcat: 8080 -> 8080\n- Karaf: 8181 -> 8181\n- MySQL: 3306 -> 3306\n\n\nAt any point in time, you can edit how the ports are forwarded by clicking on the Port Forwarding button in your virtual machine's Network settings in Virtualbox.\n\n\nYou can also edit the section of the Vagrantfile that controls the default port forwarding, which looks something like this:\n\n\n  config.vm.network :forwarded_port, guest: 8080, host: 8080 # Tomcat\n  config.vm.network :forwarded_port, guest: 8181, host: 8181 # Karaf\n  config.vm.network :forwarded_port, guest: 3306, host: 3306 # MySQL\n  config.vm.network :forwarded_port, guest: 5432, host: 5432 # PostgreSQL\n  config.vm.network :forwarded_port, guest: 80, host: 8000 # Apache\n\n\n\n\nImportant locations\n\n\n\n\nDrupal: \n/var/www/html/drupal\n\n\nApache Logs: \n/var/log/apache2/error.log\n\n\nTomcat: \n/var/lib/tomcat7\n\n\nLogs: \n/var/log/tomcat7\n\n\nFedora 4: \n/var/lib/tomcat7/webapps/fcrepo\n\n\nSolr: \n/var/lib/tomcat7/webapps/solr\n\n\nBlazeGraph: \n/var/lib/tomcat7/webapps/bigdata\n\n\nFcrepoCamelToolbox: \n/var/lib/tomcat7/webapps/fcrepo-camel-toolbox\n\n\n\n\n\n\nKaraf: \n/opt/karaf\n\n\nLogs: \n/opt/karaf/data/log\n\n\nConfiguration: \n/opt/karaf/etc\n\n\n\n\n\n\nCLAW: \n/home/vagrant/CLAW\n\n\n\n\nShared folders\n\n\nBy default, the vagrant environment uses a shared folder between your computer and the virtual machine it has created. This folder points to your Islandora CLAW github repo on your computer and is available at \n~/CLAW\n (\n/home/vagrant/CLAW\n) on the virtual machine. On top of that, in Drupal, \nsites/all/modules/islandora\n is a symlink pointing to \n~/CLAW/islandora\n.  This has a few profound consequences:\n\n\n\n\nYou can use the IDE you're comfortable with on your own machine, without the need to scp/rsync code over to the development environment\n\n\nChanges to Drupal module code are automatically reflected on your Drupal site since that code is symlinked (although you may need to be ssh'd in to \ndrush cc all\n on occassion)\n\n\nWhen testing the Vagrant install after adding changes, the code from your fork and your branch on your computer is used to generate the virtual machine\n\n\n\n\nCompiling Camel Bundles\n\n\nDespite being nothing but Blueprint xml files, Camel projects still have to be compiled using Maven. The \ninstall\n directive is the default, so all one has to do is navigate to the appropriate directory and issue a \nmvn\n in the command line.  For example, to compile the collection service:\n\n\n~ $ cd /path/to/CLAW/Alpaca/services/collection-service\n/path/to/CLAW/Alpaca/serices/collection-service $ mvn\n\n\n\n\nThe only caveat here is that this is best done on the virtual machine itself. While your virtual machine was being built, it's Karaf installation was set to monitor the vagrant user's Maven repository for changes, and autodeploy in response to \nmvn install\n. So while you can always run Maven from your own machine, it will get installed in your personal Maven repository on your machine. So to take advantage of the auto-redeploy capabilities of Karaf, you need to do this as the vagrant user.\n\n\nIf for any reason, you have to shutdown or restart Karaf, it will cease to monitor the vagrant user's Maven repository. In order to turn this back on, you'll have to issue the appropriate commands to get monitoring working again. The easiest way to do this is to re-run the karaf script the install process uses to set up monitoring by executing \n/opt/karaf/bin/client < ~/islandora/install/karaf/monitor.script\n.",
            "title": "Hacking on Islandora"
        },
        {
            "location": "/contributing/hacking-on-islandora/#hacking-on-islandora-claw",
            "text": "One of the goals of the Islandora CLAW project is to lower the barrier to entry for working on and with Islandora. A shared, consistent environment amongst developers is one of the best ways to do this. To get started hacking on Islandora CLAW with your very own development environment, all you need to do follow these steps:   Install  VirtualBox  Install  Vagrant  Fork  Islandora CLAW  and clone it onto your machine using the master branch   ~ $ git clone -b master https://github.com/your_github_name/islandora.git  OR\nIf you're already a developer and have previously forked and cloned Islandora CLAW, just add the master branch from Islandora-CLAW to your existing checkout:  ~ $ cd /path/to/islandora\n/path/to/CLAW $ git remote add claw https://github.com/Islandora-CLAW/CLAW.git\n/path/to/CLAW $ git fetch claw\n/path/to/CLAW $ git checkout master   Navigate into the  install  directory of your master checkout   ~ $ cd /path/to/CLAW/install   Build your vm using  vagrant up   /path/to/CLAW/install $ vagrant up  Sit back and relax as your development environment is created for you! In a few minutes you\u2019ll have a brand new Islandora CLAW install that you can use and abuse as much as you\u2019d like. If you ever ruin your environment (trust me, it\u2019ll happen), you can always destroy it and bring up a new one at any time.  ~ $ cd /path/to/CLAW/install\n/path/to/CLAW/install $ vagrant destroy\n/path/to/CLAW/install $ vagrant up",
            "title": "Hacking on Islandora CLAW"
        },
        {
            "location": "/contributing/hacking-on-islandora/#logging-in-to-your-development-environment",
            "text": "You can ssh into your development environment at any time by doing the following:  ~ $ cd /path/to/islandora/install\n/path/to/islandora/install $ vagrant ssh\nWelcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.13.0-45-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\n\n System information disabled due to load higher than 1.0\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n\nLast login: Fri Jul 17 13:51:38 2015 from 10.0.2.2\nvagrant@islandora:~$  You'll be logged in as the vagrant user, with your github repo in your home directory.",
            "title": "Logging in to your development environment"
        },
        {
            "location": "/contributing/hacking-on-islandora/#port-forwarding",
            "text": "Many ports are forwarded from your virtual machine to your personal computer, so care must be taken that there are no conflicts. Here's a list of all the ports that get forwarded:\n- Apache: 80 -> 8000\n- Tomcat: 8080 -> 8080\n- Karaf: 8181 -> 8181\n- MySQL: 3306 -> 3306  At any point in time, you can edit how the ports are forwarded by clicking on the Port Forwarding button in your virtual machine's Network settings in Virtualbox.  You can also edit the section of the Vagrantfile that controls the default port forwarding, which looks something like this:    config.vm.network :forwarded_port, guest: 8080, host: 8080 # Tomcat\n  config.vm.network :forwarded_port, guest: 8181, host: 8181 # Karaf\n  config.vm.network :forwarded_port, guest: 3306, host: 3306 # MySQL\n  config.vm.network :forwarded_port, guest: 5432, host: 5432 # PostgreSQL\n  config.vm.network :forwarded_port, guest: 80, host: 8000 # Apache",
            "title": "Port Forwarding"
        },
        {
            "location": "/contributing/hacking-on-islandora/#important-locations",
            "text": "Drupal:  /var/www/html/drupal  Apache Logs:  /var/log/apache2/error.log  Tomcat:  /var/lib/tomcat7  Logs:  /var/log/tomcat7  Fedora 4:  /var/lib/tomcat7/webapps/fcrepo  Solr:  /var/lib/tomcat7/webapps/solr  BlazeGraph:  /var/lib/tomcat7/webapps/bigdata  FcrepoCamelToolbox:  /var/lib/tomcat7/webapps/fcrepo-camel-toolbox    Karaf:  /opt/karaf  Logs:  /opt/karaf/data/log  Configuration:  /opt/karaf/etc    CLAW:  /home/vagrant/CLAW",
            "title": "Important locations"
        },
        {
            "location": "/contributing/hacking-on-islandora/#shared-folders",
            "text": "By default, the vagrant environment uses a shared folder between your computer and the virtual machine it has created. This folder points to your Islandora CLAW github repo on your computer and is available at  ~/CLAW  ( /home/vagrant/CLAW ) on the virtual machine. On top of that, in Drupal,  sites/all/modules/islandora  is a symlink pointing to  ~/CLAW/islandora .  This has a few profound consequences:   You can use the IDE you're comfortable with on your own machine, without the need to scp/rsync code over to the development environment  Changes to Drupal module code are automatically reflected on your Drupal site since that code is symlinked (although you may need to be ssh'd in to  drush cc all  on occassion)  When testing the Vagrant install after adding changes, the code from your fork and your branch on your computer is used to generate the virtual machine",
            "title": "Shared folders"
        },
        {
            "location": "/contributing/hacking-on-islandora/#compiling-camel-bundles",
            "text": "Despite being nothing but Blueprint xml files, Camel projects still have to be compiled using Maven. The  install  directive is the default, so all one has to do is navigate to the appropriate directory and issue a  mvn  in the command line.  For example, to compile the collection service:  ~ $ cd /path/to/CLAW/Alpaca/services/collection-service\n/path/to/CLAW/Alpaca/serices/collection-service $ mvn  The only caveat here is that this is best done on the virtual machine itself. While your virtual machine was being built, it's Karaf installation was set to monitor the vagrant user's Maven repository for changes, and autodeploy in response to  mvn install . So while you can always run Maven from your own machine, it will get installed in your personal Maven repository on your machine. So to take advantage of the auto-redeploy capabilities of Karaf, you need to do this as the vagrant user.  If for any reason, you have to shutdown or restart Karaf, it will cease to monitor the vagrant user's Maven repository. In order to turn this back on, you'll have to issue the appropriate commands to get monitoring working again. The easiest way to do this is to re-run the karaf script the install process uses to set up monitoring by executing  /opt/karaf/bin/client < ~/islandora/install/karaf/monitor.script .",
            "title": "Compiling Camel Bundles"
        },
        {
            "location": "/migration/migration/",
            "text": "fcrepo3 Object properties to fcrepo4\n\n\n\n\n\n\n\n\nfcrepo 3\n\n\nfcrepo4\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nPID\n\n\nfedora3model:PID\u2020\n\n\nyul:328697\n\n\n\n\n\n\nstate\n\n\nfedoraaccess:objState\n\n\nActive\n\n\n\n\n\n\nlabel\n\n\nfedora3model:label\u2020\n\n\nElvis Presley\n\n\n\n\n\n\ncreateDate\n\n\npremis:hasDateCreatedByApplication\n\n\n2015-03-16T20:11:06.683Z\n\n\n\n\n\n\nlastModifiedDate\n\n\nmetadataModification\n\n\n2015-03-16T20:11:06.683Z\n\n\n\n\n\n\nownerId\n\n\nfedora3model:ownerId\u2020\n\n\nnruest\n\n\n\n\n\n\n\n\n\u2020 The \nfedora3model\n namespace is not a published namespace. It is a representation of the fcrepo3 namespace \ninfo:fedora/fedora-system:def/model\n. \n\n\u2021 Not yet implemented\n\n\nfcrepo3 Datastream properties to fcrepo4\n\n\n\n\n\n\n\n\nfcrepo3\n\n\nfcrepo4\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nDSID\n\n\ndcterms:identifier\n\n\nOBJ\n\n\n\n\n\n\nLabel\n\n\ndcterms:title\u2021\n\n\nASC19109.tif\n\n\n\n\n\n\nMIME Type\n\n\nebucore:hasMimeType\u2020\n\n\nimage/tiff\n\n\n\n\n\n\nState\n\n\nfedoraaccess:objState\n\n\nActive\n\n\n\n\n\n\nCreated\n\n\npremis:hasDateCreatedByApplication\n\n\n2015-03-16T20:11:06.683Z\n\n\n\n\n\n\nVersionable\n\n\nfedora:hasVersions\u2021\n\n\ntrue\n\n\n\n\n\n\nFormat URI\n\n\npremis:formatDesignation\u2021\n\n\ninfo:pronom/fmt/156\n\n\n\n\n\n\nAlternate IDs\n\n\ndcterms:identifier\u2021\n\n\n\n\n\n\n\n\nAccess URL\n\n\ndcterms:identifier\u2021\n\n\n\n\n\n\n\n\nChecksum\n\n\ncryptofunc:\nhashalgorithm\n\u2021\n\n\ncryptofunc:sha1 \"c91342b705b15cb4f6ac5362cc6a47d9425aec86\"\n\n\n\n\n\n\n\n\n\u2020 The \nfedora3model\n namespace is not a published namespace. It is a representation of the fcrepo3 namespace \ninfo:fedora/fedora-system:def/model\n. \n\n\u2021 Not yet implemented\n\n\nfcrepo3 RELS-EXT to fcrepo4 Mapping\n\n\n\n\n\n\n\n\nfcrepo3\n\n\nExample\n\n\nfcrepo4\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nfedora:isMemberOfCollection\n\n\nrdf:resource=\"info:fedora/yul:F0433\"\n\n\nfedora:hasParent\n\n\n\n\n\n\n\n\nfedora-model:hasModel\n\n\nrdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"\n\n\nrdf:type\n\n\nislandora:largeImage\n\n\n\n\n\n\nislandora:inheritXacmlFrom\n\n\nrdf:resource=\"info:fedora/yul:F0433\"\n\n\n\n\n\n\n\n\n\n\nislandora:hasLanguage\n\n\nfra\n\n\ndcterms:language\n\n\nfra\n\n\n\n\n\n\nislandora:isPageOf\n\n\nrdf:resource=\"info:fedora/yul:336566\"\n\n\n\n\n\n\n\n\n\n\nislandora:isSequenceNumber\n\n\n213\n\n\n\n\n\n\n\n\n\n\nislandora:isPageNumber\n\n\n213\n\n\n\n\n\n\n\n\n\n\nislandora:isSection\n\n\n1\n\n\n\n\n\n\n\n\n\n\nfedora:isConstituentOf\n\n\nrdf:resource=\"info:fedora/yul:271119\"\n\n\nfedora:hasParent\n\n\n\n\n\n\n\n\nislandora:isSequenceNumberOfyul_271119\n\n\n1\n\n\n\n\n\n\n\n\n\n\nislandora:dateIssued\n\n\n1945-10-31\n\n\n\n\n\n\n\n\n\n\nislandora:isSequenceNumber\n\n\n2023\n\n\n\n\n\n\n\n\n\n\nislandora:isMemberOf\n\n\nislandora:sp_large_image_cmodel\n\n\nfedora:hasParent\n\n\n\n\n\n\n\n\nfedora:isAnnotationOf\n\n\nrdf:resource=\"info:fedora/islandora:96\n\n\n\n\n\n\n\n\n\n\nislandora:targetedBy\n\n\nadmin\n\n\n\n\n\n\n\n\n\n\nislandora:isAnnotationType\n\n\nmy type\n\n\n\n\n\n\n\n\n\n\nislandora:hasURN\n\n\nurn:uuid:C691142D-FCC0-0001-F6B3-1390128014A5\n\n\n\n\n\n\n\n\n\n\nislandora:targets\n\n\ninfo:fedora/islandora:96\n\n\n\n\n\n\n\n\n\n\nislandora:isViewableByUser\n\n\nnruest\n\n\n\n\n\n\n\n\n\n\nislandora:isViewableByRole\n\n\nislandora creator\n\n\n\n\n\n\n\n\n\n\nislandora:isManageableByUser\n\n\nnruest\n\n\n\n\n\n\n\n\n\n\nislandora:isManageableByRole\n\n\nislandora administrator\n\n\n\n\n\n\n\n\n\n\n\n\nSamples\n\n\nLarge Image object\n\n\n\n\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:328697\">\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/yul:F0433\"></fedora:isMemberOfCollection>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"></fedora-model:hasModel>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:F0433\"></islandora:inheritXacmlFrom>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nPage object\n\n\n\n\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:336779\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:pageCModel\"></fedora-model:hasModel>\n    <islandora:hasLanguage>fra</islandora:hasLanguage>\n    <islandora:isPageOf rdf:resource=\"info:fedora/yul:336566\"></islandora:isPageOf>\n    <islandora:isSequenceNumber>213</islandora:isSequenceNumber>\n    <islandora:isPageNumber>213</islandora:isPageNumber>\n    <islandora:isSection>1</islandora:isSection>\n    <fedora:isMemberOf rdf:resource=\"info:fedora/yul:336566\"></fedora:isMemberOf>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:336566\"></islandora:inheritXacmlFrom>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nCompound object (child)\n\n\n\n\n<rdf:RDF xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:271117\">\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/yul:F0375\"></fedora:isMemberOfCollection>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"></fedora-model:hasModel>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:F0375\"></islandora:inheritXacmlFrom>\n    <fedora:isConstituentOf rdf:resource=\"info:fedora/yul:271119\"></fedora:isConstituentOf>\n    <islandora:isSequenceNumberOfyul_271119>1</islandora:isSequenceNumberOfyul_271119>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nNewspaper object\n\n\n\n\n<rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1243378\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperCModel\"/>\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/uofm:libraries\"/>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nNewspaper issue object\n\n\n\n\n<rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1351347\">\n    <fedora:isMemberOf rdf:resource=\"info:fedora/uofm:1243378\"/>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperIssueCModel\"/>\n    <islandora:dateIssued>1945-10-31</islandora:dateIssued>\n    <islandora:isSequenceNumber>2023</islandora:isSequenceNumber>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nNewspaper page object\n\n\n\n\n<rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1351348\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperPageCModel\"/>\n    <fedora:isMemberOf rdf:resource=\"info:fedora/uofm:1351347\"/>\n    <islandora:isPageOf rdf:resource=\"info:fedora/uofm:1351347\"/>\n    <islandora:isSequenceNumber>1</islandora:isSequenceNumber>\n    <islandora:isPageNumber>1</islandora:isPageNumber>\n  </rdf:Description>\n</rdf:RDF>\n\n\n\n\nAudit log migration\n\n\nauditTrail mapping\n\n\n\n\n\n\n\n\nfcrepo3 event\n\n\nfcrepo4 Event Type\n\n\n\n\n\n\n\n\n\n\naddDatastream\n\n\npremis:ing\u2021\n\n\n\n\n\n\nmodifyDatastreamByReference\n\n\naudit:contentModification/metadataModification\u2021\n\n\n\n\n\n\nmodifyObject\n\n\naudit:resourceModification\u2021\n\n\n\n\n\n\nmodifyObject (checksum validation)\n\n\npremis:validation\u2021\n\n\n\n\n\n\nmodifyDatastreamByValue\n\n\naudit:contentModification/metadataModification\u2021\n\n\n\n\n\n\npurgeDatastream\n\n\naudit:contentRemoval\u2021\n\n\n\n\n\n\n\n\n\u2020 The \nfedora3model\n namespace is not a published namespace. It is a representation of the fcrepo3 namespace \ninfo:fedora/fedora-system:def/model\n. \n\n\u2021 Not yet implemented\n\n\nExamples\n:\n\n\naddDatastream\n\n\n<audit:record ID=\"AUDREC1\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>addDatastream</audit:action>\n<audit:componentID>TECHMD_FITS</audit:componentID>\n<audit:responsibility>joanna</audit:responsibility>\n<audit:date>2013-06-21T14:54:27.396Z</audit:date>\n<audit:justification>Copied datastream from yul:61282.</audit:justification>\n</audit:record>\n\n\n\n\nmodifyDatastreamByReference\n\n\n<audit:record ID=\"AUDREC4\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyDatastreamByReference</audit:action>\n<audit:componentID>TN</audit:componentID>\n<audit:responsibility>fedoraAdmin</audit:responsibility>\n<audit:date>2013-06-22T05:14:34.443Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>\n\n\n\n\nmodifyObject\n\n\n<audit:record ID=\"AUDREC5\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyObject</audit:action>\n<audit:componentID></audit:componentID>\n<audit:responsibility>joanna</audit:responsibility>\n<audit:date>2013-07-02T14:31:59.699Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>\n\n\n\n\nmodifyObject (checksum validation)\n\n\n<audit:record ID=\"AUDREC23\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyObject</audit:action>\n<audit:componentID></audit:componentID>\n<audit:responsibility>anonymous</audit:responsibility>\n<audit:date>2014-01-22T21:07:43.502Z</audit:date>\n<audit:justification>PREMIS:file=yul:96031+FULL_TEXT+FULL_TEXT.0; PREMIS:eventType=fixity check; PREMIS:eventOutcome=SHA-1 checksum validated.</audit:justification>\n</audit:record>\n\n\n\n\nmodifyDatastreamByValue\n\n\n<audit:record ID=\"AUDREC16\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyDatastreamByValue</audit:action>\n<audit:componentID>RELS-EXT</audit:componentID>\n<audit:responsibility>nruest</audit:responsibility>\n<audit:date>2013-11-27T15:42:08.823Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>\n\n\n\n\npurgeDatastream\n\n\n<audit:record ID=\"AUDREC15\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>purgeDatastream</audit:action>\n<audit:componentID>MKV</audit:componentID>\n<audit:responsibility>fedoraAdmin</audit:responsibility>\n<audit:date>2015-04-08T14:37:54.963Z</audit:date>\n<audit:justification>Purged datastream (ID=MKV), versions ranging from the beginning of time to the end of time.  This resulted in the permanent removal of 1 datastream version(s) (2015-02-19T21:01:56.235Z) and all associated audit records.</audit:justification>\n\n\n\n\nDiagrams\n\n\nExample Islandora (Large Image Object), PCDM, and Fedora 4 structure",
            "title": "Migration"
        },
        {
            "location": "/migration/migration/#fcrepo3-object-properties-to-fcrepo4",
            "text": "fcrepo 3  fcrepo4  Example      PID  fedora3model:PID\u2020  yul:328697    state  fedoraaccess:objState  Active    label  fedora3model:label\u2020  Elvis Presley    createDate  premis:hasDateCreatedByApplication  2015-03-16T20:11:06.683Z    lastModifiedDate  metadataModification  2015-03-16T20:11:06.683Z    ownerId  fedora3model:ownerId\u2020  nruest     \u2020 The  fedora3model  namespace is not a published namespace. It is a representation of the fcrepo3 namespace  info:fedora/fedora-system:def/model .  \n\u2021 Not yet implemented",
            "title": "fcrepo3 Object properties to fcrepo4"
        },
        {
            "location": "/migration/migration/#fcrepo3-datastream-properties-to-fcrepo4",
            "text": "fcrepo3  fcrepo4  Example      DSID  dcterms:identifier  OBJ    Label  dcterms:title\u2021  ASC19109.tif    MIME Type  ebucore:hasMimeType\u2020  image/tiff    State  fedoraaccess:objState  Active    Created  premis:hasDateCreatedByApplication  2015-03-16T20:11:06.683Z    Versionable  fedora:hasVersions\u2021  true    Format URI  premis:formatDesignation\u2021  info:pronom/fmt/156    Alternate IDs  dcterms:identifier\u2021     Access URL  dcterms:identifier\u2021     Checksum  cryptofunc: hashalgorithm \u2021  cryptofunc:sha1 \"c91342b705b15cb4f6ac5362cc6a47d9425aec86\"     \u2020 The  fedora3model  namespace is not a published namespace. It is a representation of the fcrepo3 namespace  info:fedora/fedora-system:def/model .  \n\u2021 Not yet implemented",
            "title": "fcrepo3 Datastream properties to fcrepo4"
        },
        {
            "location": "/migration/migration/#fcrepo3-rels-ext-to-fcrepo4-mapping",
            "text": "fcrepo3  Example  fcrepo4  Example      fedora:isMemberOfCollection  rdf:resource=\"info:fedora/yul:F0433\"  fedora:hasParent     fedora-model:hasModel  rdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"  rdf:type  islandora:largeImage    islandora:inheritXacmlFrom  rdf:resource=\"info:fedora/yul:F0433\"      islandora:hasLanguage  fra  dcterms:language  fra    islandora:isPageOf  rdf:resource=\"info:fedora/yul:336566\"      islandora:isSequenceNumber  213      islandora:isPageNumber  213      islandora:isSection  1      fedora:isConstituentOf  rdf:resource=\"info:fedora/yul:271119\"  fedora:hasParent     islandora:isSequenceNumberOfyul_271119  1      islandora:dateIssued  1945-10-31      islandora:isSequenceNumber  2023      islandora:isMemberOf  islandora:sp_large_image_cmodel  fedora:hasParent     fedora:isAnnotationOf  rdf:resource=\"info:fedora/islandora:96      islandora:targetedBy  admin      islandora:isAnnotationType  my type      islandora:hasURN  urn:uuid:C691142D-FCC0-0001-F6B3-1390128014A5      islandora:targets  info:fedora/islandora:96      islandora:isViewableByUser  nruest      islandora:isViewableByRole  islandora creator      islandora:isManageableByUser  nruest      islandora:isManageableByRole  islandora administrator       Samples  Large Image object   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:328697\">\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/yul:F0433\"></fedora:isMemberOfCollection>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"></fedora-model:hasModel>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:F0433\"></islandora:inheritXacmlFrom>\n  </rdf:Description>\n</rdf:RDF>  Page object   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:336779\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:pageCModel\"></fedora-model:hasModel>\n    <islandora:hasLanguage>fra</islandora:hasLanguage>\n    <islandora:isPageOf rdf:resource=\"info:fedora/yul:336566\"></islandora:isPageOf>\n    <islandora:isSequenceNumber>213</islandora:isSequenceNumber>\n    <islandora:isPageNumber>213</islandora:isPageNumber>\n    <islandora:isSection>1</islandora:isSection>\n    <fedora:isMemberOf rdf:resource=\"info:fedora/yul:336566\"></fedora:isMemberOf>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:336566\"></islandora:inheritXacmlFrom>\n  </rdf:Description>\n</rdf:RDF>  Compound object (child)   <rdf:RDF xmlns:fedora=\"info:fedora/fedora-system:def/relations-external#\" xmlns:fedora-model=\"info:fedora/fedora-system:def/model#\" xmlns:islandora=\"http://islandora.ca/ontology/relsext#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n  <rdf:Description rdf:about=\"info:fedora/yul:271117\">\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/yul:F0375\"></fedora:isMemberOfCollection>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:sp_large_image_cmodel\"></fedora-model:hasModel>\n    <islandora:inheritXacmlFrom rdf:resource=\"info:fedora/yul:F0375\"></islandora:inheritXacmlFrom>\n    <fedora:isConstituentOf rdf:resource=\"info:fedora/yul:271119\"></fedora:isConstituentOf>\n    <islandora:isSequenceNumberOfyul_271119>1</islandora:isSequenceNumberOfyul_271119>\n  </rdf:Description>\n</rdf:RDF>  Newspaper object   <rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1243378\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperCModel\"/>\n    <fedora:isMemberOfCollection rdf:resource=\"info:fedora/uofm:libraries\"/>\n  </rdf:Description>\n</rdf:RDF>  Newspaper issue object   <rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1351347\">\n    <fedora:isMemberOf rdf:resource=\"info:fedora/uofm:1243378\"/>\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperIssueCModel\"/>\n    <islandora:dateIssued>1945-10-31</islandora:dateIssued>\n    <islandora:isSequenceNumber>2023</islandora:isSequenceNumber>\n  </rdf:Description>\n</rdf:RDF>  Newspaper page object   <rdf:RDF>\n  <rdf:Description rdf:about=\"info:fedora/uofm:1351348\">\n    <fedora-model:hasModel rdf:resource=\"info:fedora/islandora:newspaperPageCModel\"/>\n    <fedora:isMemberOf rdf:resource=\"info:fedora/uofm:1351347\"/>\n    <islandora:isPageOf rdf:resource=\"info:fedora/uofm:1351347\"/>\n    <islandora:isSequenceNumber>1</islandora:isSequenceNumber>\n    <islandora:isPageNumber>1</islandora:isPageNumber>\n  </rdf:Description>\n</rdf:RDF>",
            "title": "fcrepo3 RELS-EXT to fcrepo4 Mapping"
        },
        {
            "location": "/migration/migration/#audit-log-migration",
            "text": "auditTrail mapping     fcrepo3 event  fcrepo4 Event Type      addDatastream  premis:ing\u2021    modifyDatastreamByReference  audit:contentModification/metadataModification\u2021    modifyObject  audit:resourceModification\u2021    modifyObject (checksum validation)  premis:validation\u2021    modifyDatastreamByValue  audit:contentModification/metadataModification\u2021    purgeDatastream  audit:contentRemoval\u2021     \u2020 The  fedora3model  namespace is not a published namespace. It is a representation of the fcrepo3 namespace  info:fedora/fedora-system:def/model .  \n\u2021 Not yet implemented  Examples :  addDatastream  <audit:record ID=\"AUDREC1\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>addDatastream</audit:action>\n<audit:componentID>TECHMD_FITS</audit:componentID>\n<audit:responsibility>joanna</audit:responsibility>\n<audit:date>2013-06-21T14:54:27.396Z</audit:date>\n<audit:justification>Copied datastream from yul:61282.</audit:justification>\n</audit:record>  modifyDatastreamByReference  <audit:record ID=\"AUDREC4\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyDatastreamByReference</audit:action>\n<audit:componentID>TN</audit:componentID>\n<audit:responsibility>fedoraAdmin</audit:responsibility>\n<audit:date>2013-06-22T05:14:34.443Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>  modifyObject  <audit:record ID=\"AUDREC5\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyObject</audit:action>\n<audit:componentID></audit:componentID>\n<audit:responsibility>joanna</audit:responsibility>\n<audit:date>2013-07-02T14:31:59.699Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>  modifyObject (checksum validation)  <audit:record ID=\"AUDREC23\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyObject</audit:action>\n<audit:componentID></audit:componentID>\n<audit:responsibility>anonymous</audit:responsibility>\n<audit:date>2014-01-22T21:07:43.502Z</audit:date>\n<audit:justification>PREMIS:file=yul:96031+FULL_TEXT+FULL_TEXT.0; PREMIS:eventType=fixity check; PREMIS:eventOutcome=SHA-1 checksum validated.</audit:justification>\n</audit:record>  modifyDatastreamByValue  <audit:record ID=\"AUDREC16\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>modifyDatastreamByValue</audit:action>\n<audit:componentID>RELS-EXT</audit:componentID>\n<audit:responsibility>nruest</audit:responsibility>\n<audit:date>2013-11-27T15:42:08.823Z</audit:date>\n<audit:justification></audit:justification>\n</audit:record>  purgeDatastream  <audit:record ID=\"AUDREC15\">\n<audit:process type=\"Fedora API-M\"/>\n<audit:action>purgeDatastream</audit:action>\n<audit:componentID>MKV</audit:componentID>\n<audit:responsibility>fedoraAdmin</audit:responsibility>\n<audit:date>2015-04-08T14:37:54.963Z</audit:date>\n<audit:justification>Purged datastream (ID=MKV), versions ranging from the beginning of time to the end of time.  This resulted in the permanent removal of 1 datastream version(s) (2015-02-19T21:01:56.235Z) and all associated audit records.</audit:justification>",
            "title": "Audit log migration"
        },
        {
            "location": "/migration/migration/#diagrams",
            "text": "Example Islandora (Large Image Object), PCDM, and Fedora 4 structure",
            "title": "Diagrams"
        },
        {
            "location": "/migration/fedora-namespace-predicates/",
            "text": "Fedora 3.x namespace RELS-EXT predicates\n\n\n$ grep -R \"FEDORA_RELS_EXT_URI\" Islandora-7.x\n\n\nIslandora\n\n\n\n\nisMemberOfCollection\n\n\nisMemberOf\n\n\n\n\nImage Annotation\n\n\n\n\nisAnnotationOf\n\n\n\n\nCompound\n\n\n\n\nisConstituentOf\n\n\nisPartOf",
            "title": "Fedora namespace predicates"
        },
        {
            "location": "/migration/fedora-namespace-predicates/#fedora-3x-namespace-rels-ext-predicates",
            "text": "$ grep -R \"FEDORA_RELS_EXT_URI\" Islandora-7.x",
            "title": "Fedora 3.x namespace RELS-EXT predicates"
        },
        {
            "location": "/migration/fedora-namespace-predicates/#islandora",
            "text": "isMemberOfCollection  isMemberOf",
            "title": "Islandora"
        },
        {
            "location": "/migration/fedora-namespace-predicates/#image-annotation",
            "text": "isAnnotationOf",
            "title": "Image Annotation"
        },
        {
            "location": "/migration/fedora-namespace-predicates/#compound",
            "text": "isConstituentOf  isPartOf",
            "title": "Compound"
        },
        {
            "location": "/migration/islandora-namespace-predicates/",
            "text": "Islandora namespace RELS-EXT predicates\n\n\n$ grep -R \"ISLANDORA_RELS_EXT_URI\" Islandora-7.x\n\n\nBook\n\n\n\n\nisPageOf\n\n\nisSequenceNumber\n\n\nisPageNumber\n\n\nisSection\n\n\n\n\nImage Annotation\n\n\n\n\ntargetedBy\n\n\ntargets\n\n\nhasColor\n\n\nhasURN\n\n\nstrokeWidth\n\n\nisEntity\n\n\nisAnnotationType\n\n\n\n\nOCR\n\n\n\n\nhasLanguage\n\n\ngenerate_ocr\n\n\n\n\nBook Batch\n\n\n\n\nbook-batched\n\n\nemail-admin-when-ingested\n\n\n\n\nNewspaper\n\n\n\n\nisPageOf\n\n\nisSequenceNumber\n\n\ndateIssued\n\n\n\n\nXACML\n\n\n\n\nisViewableByRole\n\n\nisManageableByRole\n\n\nisViewableByUser\n\n\nisManageableByUser\n\n\n\n\nPaged Content\n\n\n\n\nhasLanguage\n\n\nisPageOf\n\n\nisSequenceNumber\n\n\nisPageNumber\n\n\nisSection\n\n\n\n\nCompound\n\n\n\n\nisSequenceNumberOf$escaped_pid",
            "title": "Islandora namespace predicates"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#islandora-namespace-rels-ext-predicates",
            "text": "$ grep -R \"ISLANDORA_RELS_EXT_URI\" Islandora-7.x",
            "title": "Islandora namespace RELS-EXT predicates"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#book",
            "text": "isPageOf  isSequenceNumber  isPageNumber  isSection",
            "title": "Book"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#image-annotation",
            "text": "targetedBy  targets  hasColor  hasURN  strokeWidth  isEntity  isAnnotationType",
            "title": "Image Annotation"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#ocr",
            "text": "hasLanguage  generate_ocr",
            "title": "OCR"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#book-batch",
            "text": "book-batched  email-admin-when-ingested",
            "title": "Book Batch"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#newspaper",
            "text": "isPageOf  isSequenceNumber  dateIssued",
            "title": "Newspaper"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#xacml",
            "text": "isViewableByRole  isManageableByRole  isViewableByUser  isManageableByUser",
            "title": "XACML"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#paged-content",
            "text": "hasLanguage  isPageOf  isSequenceNumber  isPageNumber  isSection",
            "title": "Paged Content"
        },
        {
            "location": "/migration/islandora-namespace-predicates/#compound",
            "text": "isSequenceNumberOf$escaped_pid",
            "title": "Compound"
        }
    ]
}